{"version":3,"sources":["redux/actions/searchActions.js","redux/reducers/searchReducers.js","redux/actions/covariantActions.js","redux/reducers/covariantReducer.js","redux/actions/formActions.js","redux/reducers/formReducer.js","redux/actions/simulatorActions.js","redux/reducers/simulatorReducer.js","redux/reducers/index.js","interceptors/interceptors.js","services/constants.js","API/search.js","redux/sagas/searchSaga.js","redux/sagas/formSaga.js","API/covariant.js","redux/sagas/covariantSaga.js","API/simulations.js","redux/sagas/simulatorSaga.js","redux/sagas/index.js","redux/store/index.js","assets/Logo.js","components/atoms/Container/Container.styles.js","components/atoms/Container/index.js","components/atoms/Box/Box.styles.js","components/atoms/Box/index.js","components/molecules/Header/index.js","components/layouts/search/SearchLayout.js","assets/IconLoading.js","assets/IconClose.js","assets/IconSearch.js","components/atoms/Form/Form.styles.js","components/atoms/Form/index.js","components/atoms/Text/TextElement.styles.js","components/atoms/Text/index.js","components/atoms/Input/InputElement.js","components/atoms/Input/index.js","components/atoms/List/ListElement.styles.js","components/atoms/List/index.js","components/atoms/ListItem/ListItemElement.styles.js","components/atoms/ListItem/index.js","assets/IconSad.js","components/molecules/Messages/Messages.js","components/molecules/Search/SearchBar/SearchBar.js","components/molecules/DrawChart/index.js","assets/IconInfo.js","components/molecules/MoleculeDropdown/index.js","components/organisms/Results/index.js","components/atoms/Button/index.js","components/atoms/Label/LabelElement.styles.js","components/atoms/Label/index.js","components/molecules/CovariateForm/index.js","assets/IconCalendar.js","components/molecules/DosageForm/index.js","components/organisms/SimulatorForm/index.js","components/pages/Simulator/Simulator.js","App.js","reportWebVitals.js","i18n/index.js","index.js"],"names":["SEARCH","searchDrugsSuccess","payload","type","setDrug","setDrugSuccess","initialState","drugs","selectedDrug","isLoading","error","drug","searchReducer","state","action","data","COVARIANT","getCovariantById","language","getCovariantByIdSuccess","form","form_by_drug_id","covariantReducer","FORM","dosageFormSuccess","dosage_form","covarient_form","formReducer","SIMULATOR","simulatorSuccess","simulatorFail","setMoleculeAction","results","isSimulating","isSimulated","molecule","simulatorReducer","rootReducer","combineReducers","search","covariant","simulator","http","axios","create","BASE_URL","AUTH_TOKEN","defaults","baseURL","interceptors","request","use","config","headers","Promise","reject","response","resolve","HTTP","url","method","JSON","stringify","then","status","catch","SEARCH_DRUGS","limit","DRUG_ID","SIMULATIONS","SIMULATIONS_V2","drugId","apiSearchDrugs","a","apiSearchDrugById","id","watchSearchDrugs","watchSearchDrugsById","watchSetDrug","take","call","put","watchFormIntake","watchFormCovariant","apiGetCovariant","apiGetCovariantById","watchGetCovariant","watchGetCovariantById","apiSimulations_v2","watchSimulator_v2","rootSaga","all","searchSaga","formSaga","covariantSaga","simulatorSaga","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","Logo","to","src","alt","ContainerElement","styled","section","Container","children","className","BoxElement","div","width","height","margin","padding","Box","onClick","Header","i18n","useTranslation","dispatch","useDispatch","useSelector","changeLanguage","setTimeout","open","Button","viewBox","fill","fillRule","d","clipRule","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","static","Item","e","active","SearchLayout","IconLoading","strokeColor","pathFillColor","classNames","xmlns","cx","cy","r","stroke","strokeWidth","defaultProps","IconClose","color","strokeLinecap","strokeLinejoin","IconSearch","FormElement","Form","onSubmit","TextElement","p","Text","value","InputElement","input","Input","name","placeholder","list","onChange","onKeyUp","required","ListElement","ul","List","ListItemElement","li","IconSad","Messages","SearchBar","searchDrug","activeDrug","useState","setSelectedDrug","toggleList","setToggleList","toggleClose","setToggleClose","drugList","setDrugList","t","searchQuery","setSearchQuery","useEffect","length","handleOnKeyUp","target","searchDrugs","preventDefault","handleFormSubmit","label","localStorage","removeItem","href","map","index","ListItem","setItem","handleClickDrug","Chart","props","options","DrawChart","setData","times","DATA_CURVE_COLORS","line","bg","dataArray","toxicity","Array","curves","values","thresholds","efficiancy","push","borderColor","pointRadius","pointHitRadius","tension","borderWidth","hoverBorderWidth","order","curve","i","legend","backgroundColor","labels","Date","datasets","reponsive","scales","x","time","unit","adapter","ticks","callback","val","moment","format","title","display","text","y","min","stepSize","font","size","weight","plugins","bottom","left","right","top","align","reverse","boxWidth","generateLabels","b","console","log","IconInfo","MoleculeDropdown","parseInt","setMolecule","role","Results","disabled","LabelElement","Label","forID","htmlFor","CovariantForm","birthday","patient","setPatient","stateCovariant","form_groups","setFormGroups","form_items","setFormItems","setFocusedItem","validator","useRef","SimpleReactValidator","handleInput","prevState","parseFloat","current","showMessages","filteredPayload","Object","fromEntries","entries","filter","v","covariantForm","covariate_groups","covariates","handleFocus","sort","position","group","description","item","covariate_group_id","cov_spec","onMouseLeave","onMouseEnter","cov_type","cov_key","undefined","modality","option","step","max","onFocus","IconCalendar","DosageForm","registerLocale","es","fr","en","drug_id","administration_type","start_date","end_date","setDate","getDate","intakes","prescription","setPrescription","setIntakes","dosage","quantity","interval","handleDosageChange","newArr","showWeekNumbers","locale","selected","handleStartDate","handleEndDate","splice","removeDose","addDose","Error","simulationError","message","Warning","SimulatorForm","simulatorPayload","setSimulatorPayload","subject","is_simulable","molecules","CovariateForm","Simulator","withTranslation","exact","path","component","SubComponent","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","XHR","LanguageDetector","initReactI18next","init","resources","languageEN","languageFR","languageES","br","languageBR","lng","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","bindI18n","bindStore","nsMode","ReactDOM","render","I18nextProvider","StrictMode","document","getElementById"],"mappings":"o9EAEaA,EAEW,qBAFXA,EAGa,uBAHbA,EAIU,oBAJVA,EAMA,WANAA,EAOQ,mBAPRA,EAQK,gBARLA,EAWU,qBAXVA,EAYkB,6BAZlBA,EAae,0BAYbC,EAAqB,SAACC,GAEjC,MAAO,CACLC,KAAKH,EACLE,YAoCSE,EAAU,SAACF,GACtB,MAAO,CACLC,KAAMH,EACNE,YAISG,EAAiB,SAACH,GAC7B,MAAO,CACLC,KAAMH,EACNE,YC3EAI,EAAe,CACnBC,MAAO,KACPC,aAAc,KACdC,WAAW,EACXC,MAAO,KACPC,KAAM,MAqCOC,EAlCO,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACtD,OAAQA,EAAOX,MACb,KAAKH,EACH,OAAO,2BAAKa,GAAZ,IAAmBN,MAAO,KAAME,WAAW,EAAMC,MAAO,OAE1D,KAAKV,EACH,OAAO,2BAAKa,GAAZ,IAAmBN,MAAOO,EAAOZ,QAAQa,KAAMN,WAAW,EAAOC,MAAO,OAE1E,KAAKV,EACH,OAAO,2BAAKa,GAAZ,IAAmBN,MAAOO,EAAOZ,QAASO,WAAW,EAAOC,MAAO,OAErE,KAAKV,EACH,OAAO,2BAAKa,GAAZ,IAAmBF,KAAM,KAAMF,WAAW,EAAMC,MAAO,OAEzD,KAAKV,EACH,OAAO,2BAAKa,GAAZ,IAAmBF,KAAMG,EAAOZ,QAAQa,KAAMN,WAAW,EAAOC,MAAO,OAEzE,KAAKV,EACH,OAAO,2BAAKa,GAAZ,IAAmBF,KAAMG,EAAOZ,QAASO,WAAW,EAAOC,MAAO,OAEpE,KAAKV,EACH,OAAO,2BAAKa,GAAZ,IAAmBL,aAAc,KAAMC,WAAW,EAAMC,MAAO,OAEjE,KAAKV,EAGL,KAAKA,EACH,OAAO,2BAAKa,GAAZ,IAAmBL,aAAcM,EAAOZ,QAASO,WAAW,EAAOC,MAAO,OAE5E,QACE,OAAOG,ICxCAG,EAEI,gBAFJA,EAGY,wBAHZA,EAIS,qBAJTA,EAOS,qBAPTA,EAQiB,6BARjBA,EASc,0BAuBdC,EAAmB,SAACf,EAAQgB,GACvC,MAAO,CACLf,KAAMa,EACNd,UACAgB,aAISC,EAA0B,SAACjB,GAEtC,MAAO,CACLC,KAAMa,EACNd,YC1CEI,EAAe,CACnBc,KAAM,KACNC,gBAAiB,KACjBZ,WAAW,EACXC,MAAO,MA2BMY,EAxBU,WAAmC,IAAlCT,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACzD,OAAQA,EAAOX,MACb,KAAKa,EACH,OAAO,2BAAKH,GAAZ,IAAmBO,KAAM,KAAMX,WAAW,EAAMC,MAAO,OAEzD,KAAKM,EAGH,KAAKA,EACH,OAAO,2BAAKH,GAAZ,IAAmBO,KAAMN,EAAOZ,QAASO,WAAW,EAAOC,MAAO,OAEtE,KAAKM,EACH,OAAO,2BAAKH,GAAZ,IAAmBO,KAAM,KAAMX,WAAW,EAAMC,MAAO,OAEzD,KAAKM,EAGL,KAAKA,EACH,OAAO,2BAAKH,GAAZ,IAAmBO,KAAMN,EAAOZ,QAASO,WAAW,EAAOC,MAAO,OACpE,QACE,OAAOG,IC3BAU,EAEW,uBAFXA,EAGa,yBAHbA,EAIU,sBAJVA,EAOQ,oBAPRA,EAQU,sBARVA,EASO,mBAqCPC,EAAoB,SAACtB,GAChC,MAAO,CACLC,KAAMoB,EACNrB,YCjDEI,EAAe,CACnBmB,YAAa,KACbC,eAAe,KACfjB,WAAW,EACXC,MAAO,MA4BMiB,EAzBK,WAAmC,IAAlCd,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACpD,OAAQA,EAAOX,MACb,KAAKoB,EACH,OAAO,2BAAKV,GAAZ,IAAmBa,eAAgB,KAAMjB,WAAW,EAAMC,MAAO,OAEnE,KAAKa,EAGL,KAAKA,EACH,OAAO,2BAAKV,GAAZ,IAAmBa,eAAgBZ,EAAOZ,QAASO,WAAW,EAAOC,MAAO,OAE5E,KAAKa,EACH,OAAO,2BAAKV,GAAZ,IAAmBY,YAAa,KAAMhB,WAAW,EAAMC,MAAO,OAEhE,KAAKa,EAGL,KAAKA,EACH,OAAO,2BAAKV,GAAZ,IAAmBY,YAAaX,EAAOZ,QAASO,WAAW,EAAOC,MAAO,OAE7E,QACE,OAAOG,IC5BAe,EAEM,kBAFNA,EAGQ,oBAHRA,EAIK,iBAJLA,EAKM,kBALNA,EAME,eAYFC,GAAmB,SAAC3B,GAE/B,MAAO,CACLC,KAAMyB,EACN1B,YAIS4B,GAAgB,SAAC5B,GAC5B,MAAO,CACLC,KAAMyB,EACN1B,YAYS6B,GAAoB,SAAC7B,GAChC,MAAO,CACLC,KAAKyB,EACL1B,YC5CEI,GAAe,CACnB0B,QAAS,KACTC,cAAc,EACdvB,MAAO,KACPwB,aAAa,EACbC,SAAU,GAwBGC,GArBU,WAAmC,IAAlCvB,EAAiC,uDAAzBP,GAAcQ,EAAW,uCACzD,OAAQA,EAAOX,MACb,KAAKyB,EACH,OAAO,2BAAKf,GAAZ,IAAmBmB,QAAS,KAAMC,cAAc,EAAMvB,MAAO,KAAMwB,aAAa,IAElF,KAAKN,EACH,OAAO,2BAAKf,GAAZ,IAAmBmB,QAASlB,EAAOZ,QAAS+B,cAAc,EAAOvB,MAAO,KAAMwB,aAAa,IAE7F,KAAKN,EACH,OAAO,2BAAKf,GAAZ,IAAmBH,MAAOI,EAAOZ,QAAS+B,cAAc,EAAOC,aAAa,IAE9E,KAAKN,EACH,OAAO,2BAAKf,GAAZ,IAAmBH,MAAOI,EAAOZ,QAAS8B,QAASlB,EAAOZ,QAAS+B,cAAc,EAAOC,aAAa,IAEvG,KAAKN,EACH,OAAO,2BAAKf,GAAZ,IAAmBsB,SAAUrB,EAAOZ,UACtC,QACE,OAAOW,ICdEwB,GAPKC,YAAgB,CAClCC,OAAQ3B,EACR4B,UAAWlB,EACXF,KAAKO,EACLc,UAAUL,K,yDCPRM,GAAOC,KAAMC,SAEbC,GAAW,yCACXC,GAAa,2CAcbD,GAAW,2CACXC,GAAa,2CAMjBJ,GAAKK,SAASC,QAAUH,GACxBF,KAAMM,aAAaC,QAAQC,KAAI,SAAAC,GAG7B,OAFAA,EAAOC,QAAP,cAAkC,UAAYP,GAC9CM,EAAOC,QAAQ,gBAAkB,mBAC1BD,KACN,SAAA1C,GACD4C,QAAQC,OAAO7C,MAGjBiC,KAAMM,aAAaO,SAASL,KAAI,SAACK,GAC/B,OAAOF,QAAQG,QAAQD,MACtB,SAAC9C,GACF,OAAO4C,QAAQC,OAAO7C,MAGjB,IAmBMgD,GAnBmB,SAACC,EAAKC,EAAQ7C,GAC5C,OAAO,IAAIuC,SAAQ,SAACG,EAASF,GAC3BZ,KAAM,CACJiB,SACAD,IAAKd,GAAWc,EAChB5C,KAAM8C,KAAKC,UAAU/C,KACpBgD,MAAK,SAAAP,GACkB,MAApBA,EAASQ,QAAsC,MAApBR,EAASQ,OACtCP,EAAQD,GAERD,EAAO,8BAERU,OAAM,SAAAvD,GACP6C,EAAO7C,UCtDAwD,GACF,SAAC3B,EAAQ4B,GAAT,8BAAoC5B,EAApC,kBAAoD4B,IADlDD,GAEH,SAACE,GAAD,uBAAuBA,IASpBC,GAAc,CACvBA,YAAY,eACZC,eAAe,mBAGNtD,GACA,SAACE,GAAD,mCAAkCA,IADlCF,GAEO,SAACuD,EAAOrD,GAAR,4BAAoCqD,EAApC,mBAAqDrD,ICf5DsD,GAAc,yCAAG,WAAOtE,GAAP,UAAAuE,EAAA,sEACbf,GAAKQ,GAAmBhE,EAAQqC,OAAQrC,EAAQiE,OAAQ,OAD3C,mFAAH,sDAKdO,GAAiB,yCAAG,WAAOC,GAAP,UAAAF,EAAA,sEAChBf,GAAKQ,GAAkBS,GAAK,OADZ,mFAAH,sD,aCCbC,I,aAaAC,I,aAaAC,IA1BV,SAAUF,KAAV,4EAEiB,OAFjB,SAEuBG,aAAK/E,GAF5B,OAGgB,OAHhB,SAEKE,EAFL,EAEKA,QAFL,SAGsB8E,aAAKR,GAAetE,GAH1C,OAKC,OAFIsD,EAHL,0BAKOyB,aAAIhF,EAAmBuD,IAL9B,gCAOC,OAPD,oCAOOyB,aAAI,CAAC9E,KAAKH,EAA0BwD,aAP3C,8EAaA,SAAUqB,KAAV,4EAEiB,OAFjB,SAEuBE,aAAK/E,GAF5B,OAGgB,OAHhB,SAEKE,EAFL,EAEKA,QAFL,SAGsB8E,aAAKN,GAAkBxE,GAH7C,OAKC,OAFIsD,EAHL,0BAKOyB,aAAIhF,EAAmBuD,IAL9B,gCAOC,OAPD,oCAOOyB,aAAI,CAAC9E,KAAKH,EAAgCwD,aAPjD,8EAaA,SAAUsB,KAAV,0EAEiB,OAFjB,SAEuBC,aAAK/E,GAF5B,OAIC,OAJD,SAEKE,EAFL,EAEKA,QAFL,kBAIO+E,aAAI5E,EAAeH,IAJ1B,+BAMC,OAND,oCAMO+E,aAAI,CAAC9E,KAAKH,EAAqBU,MAAK,OAN3C,8E,iBC5BUwE,I,aAWAC,IAXV,SAAUD,KAAV,0EAEiB,OAFjB,SAEuBH,aAAKxD,GAF5B,OAIC,OAJD,SAEKrB,EAFL,EAEKA,QAFL,kBAIO+E,aAAI,CAAC9E,KAAKoB,EAA4BrB,YAJ7C,+BAMC,OAND,oCAMO+E,aAAI,CAAC9E,KAAKoB,EAA0Bb,MAAK,OANhD,8EAWA,SAAUyE,KAAV,0EAEmB,OAFnB,SAEyBJ,aAAKxD,GAF9B,OAIG,OAJH,SAEOrB,EAFP,EAEOA,QAFP,kBAIS+E,aAAIzD,EAAkBtB,IAJ/B,+BAMG,OANH,oCAMS+E,aAAI,CAAC9E,KAAKoB,EAAuBb,MAAK,OAN/C,8ECfA,IAAM0E,GAAe,yCAAG,WAAOlE,GAAP,UAAAuD,EAAA,sEACdf,GAAK1C,GAAmBE,GAAW,MAAO,IAD5B,mFAAH,sDAKfmE,GAAmB,yCAAG,WAAOd,EAAOrD,GAAd,UAAAuD,EAAA,sEAClBf,GAAK1C,GAAyBuD,EAAOrD,GAAW,MAAO,IADrC,mFAAH,wD,aCFfoE,I,aAYAC,IAZV,SAAUD,KAAV,0EAEc,OAFd,SAEoBP,aAAK/D,GAFzB,OAGc,OADXE,EAFH,gBAGoB8D,aAAKI,GAAiBlE,GAH1C,OAKD,OAFIsC,EAHH,0BAKKyB,aAAI,CAAE9E,KAAMa,EAAiCwC,aALlD,gCAOD,OAPC,oCAOKyB,aAAI,CAAE9E,KAAMa,EAA8BN,MAAK,OAPpD,sFAYA,SAAU6E,KAAV,8EAE0B,OAF1B,SAEgCR,aAAK/D,GAFrC,OAGc,OAHd,SAEKd,EAFL,EAEKA,QAAQgB,EAFb,EAEaA,SAFb,SAGoB8D,aAAKK,GAAqBnF,EAAQgB,GAHtD,OAKD,OAFIsC,EAHH,0BAKKyB,aAAI9D,EAAwBqC,IALjC,gCAOD,OAPC,oCAOKyB,aAAI,CAAE9E,KAAMa,EAAmCN,MAAK,OAPzD,sFChBA,IAIM8E,GAAiB,yCAAG,WAAOtF,GAAP,UAAAuE,EAAA,sEAChBf,GAAKW,GAAYC,eAAe,OAAOpE,GADvB,mFAAH,sD,aCEbuF,IAAV,SAAUA,KAAV,4EAEiB,OAFjB,SAEuBV,aAAKnD,GAF5B,OAKgB,OALhB,SAEK1B,EAFL,EAEKA,QAFL,kBAKsB8E,aAAKQ,GAAmBtF,GAL9C,OAMD,OADMsD,EALL,iBAMKyB,aAAIpD,GAAiB2B,IAN1B,gCAQD,OARC,oCAQKyB,aAAInD,GAAc,KAAM0B,SAASzC,OARtC,8E,iBCFG2E,IAAV,SAAUA,KAAV,kEACE,OADF,SACQC,aAAI,CACRC,KACAA,KACAA,KACAC,KACAA,KACAC,KACAA,KACAC,OATJ,wCAaeL,I,MAAAA,MCJAM,GAVQ,WACrB,IAAMC,EAAiBC,cACjBC,EAAQC,YACZ/D,GACAgE,YAAgBJ,EAAgBK,MAGlC,OADAL,EAAeM,IAAIb,IACZS,G,QCFMK,GARF,WAET,OACI,eAAC,IAAD,CAAMC,GAAG,IAAT,SACI,sBAAKC,IAHC,sFAGUC,IAAI,kB,kBCLnBC,GAAmBC,KAAOC,QAAV,mDCcdC,GAZG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC7B,OACE,eAACL,GAAD,CAAkBK,UAAWA,EAA7B,SACGD,KCLME,GAAaL,KAAOM,IAAV,qDACpB,qBAAGC,SACJ,qBAAGC,UACH,qBAAGC,UACH,qBAAGC,WCoBUC,GAvBH,SAAC,GAAsE,IAApER,EAAmE,EAAnEA,SAAUC,EAAyD,EAAzDA,UAAWG,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,QAASE,EAAc,EAAdA,QAChE,OACI,eAACP,GAAD,CACIE,MAAOA,EACPC,OAAQA,EACRC,OAAQA,EACRC,QAASA,EACTE,QAASA,EACTR,UAAWA,EANf,SAOKD,K,mBCkIEU,GAtIA,WACX,IAAQC,EAASC,eAATD,KACFE,EAAWC,cACXtH,EAAeuH,aAAY,SAAAlH,GAAK,OAAIA,EAAM0B,OAAO/B,gBACjDwH,EAAiB,SAAC9G,GACpByG,EAAKK,eAAe9G,GAGhBV,GAAgBA,EAAamE,IAC7BsD,YAAW,WACPJ,EAAS5G,EAAiBT,EAAamE,GAAIgD,EAAKzG,aACjD,MAKX,OACI,qCACI,eAAC,GAAD,CAAW+F,UAAU,yBAArB,SACI,0BAAQA,UAAU,4BAAlB,UACI,eAAC,GAAD,IACA,eAAC,GAAD,CAAKA,UAAU,oBAAf,SAEI,sBAAKA,UAAU,kCAAf,SACI,eAAC,KAAD,UACK,gBAAGiB,EAAH,EAAGA,KAAH,OACG,uCACI,uBAAMjB,UAAU,uBAAhB,SACI,gBAAC,KAAKkB,OAAN,CAAalB,UAAU,uSAAvB,UACI,6CACA,sBACIA,UAAU,qBACVmB,QAAQ,YACRC,KAAK,eAHT,SAKI,uBACIC,SAAS,UACTC,EAAE,qHACFC,SAAS,mBAMzB,eAAC,KAAD,CACIC,KAAMP,EACNQ,MAAM,mCACNC,UAAU,+BACVC,QAAQ,kCACRC,MAAM,iCACNC,UAAU,kCACVC,QAAQ,+BAPZ,SASI,eAAC,KAAKC,MAAN,CACIC,QAAM,EACNhC,UAAU,yIAFd,SAII,uBAAKA,UAAU,OAAf,UACI,eAAC,KAAKiC,KAAN,CAAWzB,QAAS,SAAC0B,GAAD,OAAOnB,EAAe,OAA1C,SACK,gBAAGoB,EAAH,EAAGA,OAAH,OACG,oBAEInC,UAAS,UAAKmC,EACR,4BACA,gBAFG,sEAFb,6BAWR,eAAC,KAAKF,KAAN,CAAWzB,QAAS,SAAC0B,GAAD,OAAOnB,EAAe,OAA1C,SACK,gBAAGoB,EAAH,EAAGA,OAAH,OACG,oBAEInC,UAAS,UAAKmC,EACR,4BACA,gBAFG,sEAFb,4BAYR,eAAC,KAAKF,KAAN,CAAWzB,QAAS,SAAC0B,GAAD,OAAOnB,EAAe,OAA1C,SACK,gBAAGoB,EAAH,EAAGA,OAAH,OACG,oBAEInC,UAAS,UAAKmC,EACR,4BACA,gBAFG,sEAFb,sDC/E7CC,GAZM,SAAC,GAAkB,IAAhBrC,EAAe,EAAfA,SACpB,OACI,uCACI,eAAC,GAAD,IACCA,M,SCNPsC,GAAc,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,WAC9C,OACI,uBAAKxC,UAAWwC,EAChBC,MAAM,6BACNrB,KAAK,OACLD,QAAQ,YAHR,UAIE,yBAAQnB,UAAU,aAAa0C,GAAG,KAAKC,GAAG,KAAKC,EAAE,KACjDC,OAAQP,EAAaQ,YAAY,MAEjC,uBAAM9C,UAAU,aAChBoB,KAAOmB,EACPjB,EAAE,wHAUZe,GAAYU,aAAe,CACzBR,cAAe,OACfD,YAAY,OACZE,WAAY,wBAICH,UC5BTW,GAAY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOT,EAAiB,EAAjBA,WACxB,OACI,sBAAKxC,UAAWwC,EAAYpB,KAAK,OAAOD,QAAQ,YAAY0B,OAAQI,EAApE,SACI,uBAAMC,cAAc,QAAQC,eAAe,QAAQL,YAAY,IAAIxB,EAAE,4BAWjF0B,GAAUD,aAAe,CACrBE,MAAO,OACPT,WAAY,WAKDQ,UCrBTI,GAAa,SAAC,GAAwB,IAAvBH,EAAsB,EAAtBA,MAAOT,EAAe,EAAfA,WACxB,OACE,sBAAKC,MAAM,6BAA6BzC,UAAWwC,EAAYpB,KAAK,OAAOD,QAAQ,YAAY0B,OAAQI,EAAvG,SACJ,uBAAMC,cAAc,QAAQC,eAAe,QAAQL,YAAY,IAAIxB,EAAE,mDAUvE8B,GAAWL,aAAe,CACxBE,MAAM,UACNT,WAAY,WAKCY,I,eAAAA,MCpBFC,GAAczD,KAAOzF,KAAV,qDCiBTmJ,GAfF,SAAC,GAAuC,IAArCvD,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,UAAWuD,EAAe,EAAfA,SACnC,OACE,eAACF,GAAD,CACEE,SAAUA,EACVvD,UAAWA,EAFb,SAGGD,KCNMyD,GAAc5D,KAAO6D,EAAV,6BCSTC,GAVF,SAAC,GAAiC,IAAhC3D,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,UAAqB,EAAV2D,MAChC,OACI,eAACH,GAAD,CAAcxD,UAAWA,EAAzB,SAEQD,KCJH6D,GAAehE,KAAOiE,MAAV,mDCgBVC,GAfD,SAAC,GAAoF,IAAnF9D,EAAkF,EAAlFA,UAAW+D,EAAuE,EAAvEA,KAAM7K,EAAiE,EAAjEA,KAAM8K,EAA2D,EAA3DA,YAAaC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,QAASR,EAAqB,EAArBA,MAAOS,EAAc,EAAdA,SAClF,OACE,eAACR,GAAD,CACAG,KAAMA,EACNG,SAAUA,EACVD,KAAMA,EACND,YAAaA,EACbhE,UAAWA,EACXmE,QAASA,EACTR,MAAOA,EACPzK,KAAMA,EACNkL,SAAYA,KCbHC,GAAczE,KAAO0E,GAAV,6BCUTC,GARF,SAAC,GAA0B,IAAzBxE,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,UACrB,OACI,eAACqE,GAAD,CAAarE,UAAWA,EAAxB,SACCD,KCLIyE,GAAkB5E,KAAO6E,GAAV,6BCYbF,GAVF,SAAC,GAAmC,IAAlCxE,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,UAAWQ,EAAY,EAAZA,QAChC,OACI,eAACgE,GAAD,CAAiBxE,UAAWA,EAAWQ,QAASA,EAAhD,SAEQT,KCLV2E,GAAU,SAAC,GAAD,IAAGzB,EAAH,EAAGA,MAAOT,EAAV,EAAUA,WAAV,OACZ,sBAAKxC,UAAWwC,EAAYpB,KAAK,OAAOD,QAAQ,YAAY0B,OAAQI,EAApE,SACI,uBAAMC,cAAc,QAAQC,eAAe,QAAQL,YAAa,EAAGxB,EAAE,0FAW7EoD,GAAQ3B,aAAe,CACnBE,MAAO,OACPT,WAAY,WCZhB,IAAMmC,GAAW,SAAC,GAAwB,IAAtB5E,EAAqB,EAArBA,SAEZyC,EAAa,sCAGjB,OALqC,EAAXtJ,MAMtB,IAAK,OACDsJ,EAAa,qHACb,MAEJ,IAAK,UACDA,EAAa,2HACb,MAEJ,IAAK,QACDA,EAAa,mHACb,MACJ,IAAK,UACDA,EAAa,wHAKrB,OACI,qCACI,eAAC,GAAD,CAAKxC,UAAWwC,EAAhB,SACI,eAAC,GAAD,CAAMxC,UAAU,sCAAhB,SACKD,SAWrB4E,GAAS5B,aAAe,CACpB7J,KAAM,QAKKyL,UCsJAC,GArLG,WACd,IAAMhE,EAAWC,cACXrH,EAAYsH,aAAY,SAAAlH,GAAK,OAAIA,EAAM0B,OAAO9B,aAC9CqL,EAAa/D,aAAY,SAAAlH,GAAK,OAAIA,EAAM0B,UACxCwJ,EAAahE,aAAY,SAAAlH,GAAK,OAAIA,EAAM0B,OAAO/B,gBACrD,EAAwCwL,qBAAxC,oBAAOxL,EAAP,KAAqByL,EAArB,KACA,EAAoCD,oBAAS,GAA7C,oBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAAsCH,oBAAS,GAA/C,oBAAOI,EAAP,KAAoBC,EAApB,KACA,EAA0BL,mBAAS,IAAnC,oBAAO7H,EAAP,KACA,GADA,KACgC6H,sBAAhC,oBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAoB3E,eAAZ4E,EAAR,EAAQA,EAAG7E,EAAX,EAAWA,KAEX,EAAsCqE,mBAAS,MAA/C,oBAAOS,EAAP,KAAoBC,EAApB,KAIAC,qBAAU,WACFb,GAAcA,EAAWvL,OAASuL,EAAWvL,MAAMQ,MAAQ+K,EAAWvL,MAAMQ,KAAK6L,OAAS,EAC1FL,EAAYT,GAEZS,EAAY,MAIjB,CAACT,IAIJ,IAAMe,EAAgB,SAAC1D,GACnB,IAAIjJ,EAAU,CACVqC,OAAQ4G,EAAE2D,OAAOlC,MACjBzG,MAAOA,GAGXuI,EAAevD,EAAE2D,OAAOlC,OAGxBqB,EAAgB9C,EAAE2D,OAAOlC,OAErBzB,EAAE2D,OAAOlC,MAAMgC,QAAU,GACzB/E,E1CvCiB,SAAC3H,GAE1B,MAAO,CACLC,KAAMH,EACNE,W0CmCe6M,CAAY7M,IAErBiM,GAAc,IACmB,IAA1BhD,EAAE2D,OAAOlC,MAAMgC,QAEtBT,GAAc,IA6BtBQ,qBAAU,WACFZ,GAAcA,EAAWpH,KACzB0H,GAAe,GACfJ,EAAgBF,MAGrB,CAACA,IAUJ,OACI,uCAEI,gBAAC,GAAD,CAAMvB,SAAU,SAACrB,GAAD,OARC,SAACA,GACtBA,EAAE6D,iBAOyBC,CAAiB9D,IAAIlC,UAAU,iCAAtD,UACI,eAAC,GAAD,CAAKA,UAAU,4CAAf,SACI,gBAAC,GAAD,CAAKA,UAAU,6EAAf,UACI,eAAC,GAAD,CAAMA,UAAU,0EAAhB,SACKuF,EAAE,kBAEP,eAAC,GAAD,CAAKvF,UAAU,OAAf,SACI,gBAAC,GAAD,CAAKA,UAAU,kBAAf,UACI,eAAC,GAAD,CACIoE,UAAQ,EACRJ,YAAauB,EAAE,sBACfrB,SAAU,SAAChC,GAAD,OAAO0D,EAAc1D,IAC/ByB,MAAOpK,GAAgBA,EAAa0M,OAAS1M,EAAa0M,MAC1DjG,UAAU,sNAEd,eAAC,GAAD,CAAKA,UAAU,oDAAf,SACI,eAAC,GAAD,MAICmF,EACG,eAAC,GAAD,CAAK3E,QAhErB,WAChB0E,GAAc,GACdE,GAAe,GACfJ,EAAgB,IAChBkB,aAAaC,WAAW,gBACxBvF,EAASzH,EAAQ,KACjByH,EpCrCC,CACL1H,KAAMyB,EACN1B,QAHc,OoCuCVqM,EAAY,KAyD+CtF,UAAU,yHAArC,SACI,eAAC,GAAD,MAEF,GAILxG,EACG,eAAC,GAAD,CAAKwG,UAAU,0FAAf,SACI,eAAC,GAAD,CAAawC,WAAW,4BAA4BD,cAAc,QAAQD,YAAY,YAExF,QAIlB,gBAAC,GAAD,CAAKtC,UAAU,uBAAf,UACI,eAAC,GAAD,CAAMA,UAAU,0DAAhB,4BAIKzG,GAAgBA,EAAamD,KAAOnD,EAAamD,IAC9C,eAAC,GAAD,CAAMsD,UAAU,yGAAhB,SACI,oBAAG6F,OAAO,SAASO,KAAM7M,GAAgBA,EAAamD,KAAOnD,EAAamD,IAA1E,yBAGM,MAOjBuI,EACG,eAAC,GAAD,CAAKjF,UAAU,uCAAf,SACI,eAAC,GAAD,CAAMA,UAAU,gFAAhB,SAEQqF,GAAYA,EAAS/L,OAAS+L,EAAS/L,MAAMQ,MAAQuL,EAAS/L,MAAMQ,KAAKuM,KAAI,SAAC3M,EAAM4M,GAAP,OACzE,eAACC,GAAD,CAAU/F,QAAS,kBA1FvC,SAACjH,GACrB2L,GAAc,GACdE,GAAe,GACfxE,EAASzH,EAAQI,IACjByL,EAAgBF,GAChBoB,aAAaM,QAAQ,eAAgB5J,KAAKC,UAAUtD,IAChDA,GAAgBA,EAAamE,IAE7BkD,EAAS5G,EAAiBT,EAAamE,GAAIgD,EAAKzG,WAkFawM,CAAgB/M,IAAOsG,UAAU,kFAA1D,SAEQtG,EAAKuM,OAFoIK,UAUjK,QAIhB,eAAC,GAAD,CAAMtG,UAAU,mCAAhB,SACKuF,EAAE,2BAKUC,GAAeX,GAAcA,EAAWvL,OAASuL,EAAWvL,MAAMQ,MAAwC,GAAhC+K,EAAWvL,MAAMQ,KAAK6L,OAC7F,eAAC,GAAD,CAAUzM,KAAK,QAAf,4BAGE,O,uCCzLhCwN,GAAQ,SAACC,GAAD,OACV,eAAC,GAAD,CAAW3G,UAAU,eAArB,SACI,eAAC,GAAD,CAAKA,UAAU,mBAAf,SACI,eAAC,KAAD,CAAMlG,KAAM6M,EAAM7M,KAAM8M,QAASD,EAAMC,eAmLpCC,GA/KG,WACd,IAAM7L,EAAe8F,aAAY,SAAAlH,GAAK,OAAIA,EAAM4B,UAAUR,gBACpDD,EAAU+F,aAAY,SAAAlH,GAAK,OAAIA,EAAM4B,UAAUT,WAC/CxB,EAAeuH,aAAY,SAAAlH,GAAK,OAAIA,EAAM0B,OAAO/B,gBACjD2B,EAAW4F,aAAY,SAAAlH,GAAK,OAAIA,EAAM4B,UAAUN,YACtD,EAAwB6J,qBAAxB,oBAAOjL,EAAP,KAAagN,EAAb,KACA,EAA0B/B,mBACtBhK,GAAWA,EAAQjB,KAAKA,KAAKoB,GAAU6L,OAAShM,EAAQjB,KAAKA,KAAKoB,GAAU6L,OADhF,oBAGMC,GAHN,UAG0B,CACtB,CACIC,KAAM,oBACNC,GAAI,sBAER,CACID,KAAM,oBACNC,GAAI,sBACL,CACCD,KAAM,oBACNC,GAAI,sBAER,CACID,KAAM,oBACNC,GAAI,sBAER,CACID,KAAM,oBACNC,GAAI,sBAER,CACID,KAAM,mBACNC,GAAI,uBAMZxB,qBAAU,WAEN,IAAIyB,EAAY,GAGZC,EAAW,IAAIC,MAAMtM,GAAWA,EAAQjB,KAAKA,KAAKoB,IAAaH,EAAQjB,KAAKA,KAAKoB,GAAUH,QAAQ,GAAGuM,OAAO,GAAGC,OAAO5B,QAC3HyB,EAAShG,KAAKrG,GAAWA,EAAQjB,KAAKA,KAAKoB,GAAUH,QAAQ,GAAGyM,WAAW,GAAG7D,OAG9E,IAAI8D,EAAa,IAAIJ,MAAMtM,GAAWA,EAAQjB,KAAKA,KAAKoB,IAAaH,EAAQjB,KAAKA,KAAKoB,GAAUH,QAAQ,GAAGuM,OAAO,GAAGC,OAAO5B,QAC7H8B,EAAWrG,KAAKrG,GAAWA,EAAQjB,KAAKA,KAAKoB,GAAUH,QAAQ,GAAGyM,WAAW,GAAG7D,OAGhFwD,EAAUO,KACN,CACI5N,KAAMsN,EACNhG,MAAM,EACN6E,MAAO,iBACP0B,YAAa,MACbC,YAAa,EACbC,eAAgB,EAChBC,QAAS,GACTC,YAAa,EACbC,iBAAkB,EAClBC,MAAO,GAEX,CACInO,KAAM2N,EACNrG,MAAM,EACN6E,MAAO,mBACP0B,YAAa,QACbC,YAAa,EACbC,eAAgB,EAChBC,QAAS,GACTC,YAAa,EACbC,iBAAkB,EAClBC,MAAO,IAIflN,GAAWA,EAAQjB,KAAKA,KAAKoB,GAAUH,QAAQ,GAAGuM,OAAOjB,KAAI,SAAC6B,EAAOC,GAAR,OACzDhB,EAAUO,KAAK,CACX5N,KAAMoO,EAAMX,OACZnG,MAAM,EACN6E,MAAOiC,EAAME,OACbC,gBAAiBrB,EAAkBmB,IAAMnB,EAAkBmB,GAAKnB,EAAkBmB,GAAGjB,GAAK,mBAC1FS,YAAaX,EAAkBmB,IAAMnB,EAAkBmB,GAAKnB,EAAkBmB,GAAGlB,KAAO,OACxFW,YAAa,EACbC,eAAgB,EAChBC,QAAS,GACTC,YAAa,EACbC,iBAAkB,EAClBC,MAAO,EAAIE,OAGnBrB,EAAQ,CACJwB,OAAQvN,GAAWA,EAAQjB,KAAKA,KAAKoB,GAAU6L,OAAShM,EAAQjB,KAAKA,KAAKoB,GAAU6L,MAAMV,KAAI,SAAAd,GAAC,OAAI,IAAIgD,KAAS,IAAJhD,MAC5GiD,SAAUrB,MAEf,CAACpM,EAASC,EAAcE,IAE3B,IAAM0L,EAAU,CACZ6B,WAAW,EACXC,OAAQ,CACJC,EAAG,CACCzP,KAAM,OACN0P,KAAK,CACDC,KAAK,QAETC,QAAS,GACTC,MAAO,CACHC,SAAU,SAAUC,EAAK3C,EAAOiB,GAE5B,IAAIqB,EAAO7N,GAAWA,EAAQjB,KAAKA,KAAKoB,GAAU6L,OAAShM,EAAQjB,KAAKA,KAAKoB,GAAU6L,MACvF,OAAOmC,KAAON,EAAKtC,IAAwB,IAAdsC,EAAKtC,IAAe6C,OAAO,6BAGhEC,MAAO,CACHC,SAAS,EACTC,KAAM,cAGdC,EAAG,CACCC,IAAK,EACLT,MAAO,CACHU,SAAU,IAEdL,MAAO,CACHC,SAAS,EACTC,KAAM,uBACNrG,MAAO,OACPyG,KAAM,CACFC,KAAM,GACNC,OAAQ,aAKxBC,QAAS,CACLT,MAAO,CACHC,SAAS,EACTC,KAAM/P,GAAgBA,EAAa0M,MACnCyD,KAAM,CACFC,KAAM,GACNC,OAAQ,UAEZtJ,QAAS,CAAEwJ,OAAQ,GAAIC,KAAM,EAAGC,MAAO,EAAGC,IAAK,IAEnD7B,OAAQ,CACJ8B,MAAO,QACPC,SAAS,EACTC,SAAU,GACVC,eAJI,SAIW7M,EAAG8M,GACdC,QAAQC,IAAIhN,GACZ+M,QAAQC,IAAIF,OAQ5B,OACI,qCAES/Q,GAAgBA,EAAamE,IAAM3C,EAC/BC,EACG,eAAC,GAAD,IAEA,eAAC,GAAD,CAAOlB,KAAMA,EAAM8M,QAASA,IAC9B,MCpLhB6D,GAAW,SAAC,GAAoB,IAAlBjI,EAAiB,EAAjBA,WAChB,OAAQ,qCACJ,sBAAKxC,UAAWwC,EACZC,MAAM,6BAA6BtB,QAAQ,YAD/C,SAC2D,uBAAMG,EAAE,wJAQ3EmJ,GAAS1H,aAAe,CACpBP,WAAY,+BAGDiI,I,GAAAA,MCsCAC,GAhDU,WACrB,IAAMnR,EAAeuH,aAAY,SAAAlH,GAAK,OAAIA,EAAM0B,OAAO/B,gBACjDwB,EAAU+F,aAAY,SAAAlH,GAAK,OAAIA,EAAM4B,UAAUT,WAC/C6F,EAAWC,cACjB6E,qBAAU,WACN9E,EAAS9F,GAAkB,OAM/B,OACI,qCAESC,GAAWA,EAAQjB,MAAQiB,EAAQjB,KAAKA,MAAQP,EAC7C,gBAAC,GAAD,CAAWyG,UAAU,eAArB,UACI,eAAC,GAAD,CAAMA,UAAU,wGAAhB,iDAIKzG,GAAgBA,EAAamE,IAAM3C,GAAWA,EAAQjB,KAAKA,KAAK,GAAGoB,SAChE,yBAAQgJ,SAAU,SAAChC,GAAD,OAb1B,SAACA,GACjBtB,EAAS9F,GAAkB6P,SAASzI,EAAE2D,OAAOlC,SAYIiH,CAAY1I,IAAI6B,KAAK,WAC1C/D,UAAU,mQACVgE,YAAY,kBAFhB,SAIQjJ,EAAQjB,KAAKA,KAAKuM,KAAI,SAACvM,EAAMqO,GAAP,OAClB,yBAAgBxE,MAAOwE,EAAvB,SAA2BrO,EAAKoB,SAAS+K,OAA5BkC,QAKzB,eAAC,GAAD,CAAKnI,UAAU,8GAA8G6K,KAAK,QAAlI,SACI,gBAAC,GAAD,CAAK7K,UAAU,QAAf,UACI,eAAC,GAAD,CAAKA,UAAU,QAAf,SACI,eAAC,GAAD,CAAUwC,WAAW,6CAEzB,eAAC,GAAD,UACI,eAAC,GAAD,CAAMxC,UAAU,YAAhB,4CAKtB,MCjCP8K,GAXC,WACZ,OACI,qCACI,gBAAC,GAAD,WACI,eAAC,GAAD,IACA,eAAC,GAAD,UCQD5J,GAfA,SAAC,GAAsD,IAApDhI,EAAmD,EAAnDA,KAAM6G,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,UAAWQ,EAAwB,EAAxBA,QAASuK,EAAe,EAAfA,SAClD,OACI,yBAAQ7R,KAAMA,EAAM8G,UAAWA,EAAWQ,QAASA,EAASuK,SAAUA,EAAtE,SACKhL,K,SCHAiL,GAAepL,KAAOqG,MAAV,6BCSVgF,GAVD,SAAC,GAAiC,IAAhClL,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,UAAWkL,EAAU,EAAVA,MACjC,OACI,eAACF,GAAD,CAAchL,UAAWA,EAAWmL,QAASD,EAA7C,SAEQnL,K,qBCsODqL,GAlOO,WACpB,MAAoBzK,eACpB,GADA,EAAQ4E,EAAR,EAAW7E,KACmBqE,mBAAS,CACrCsG,SAAU,gBADZ,oBAAOC,EAAP,KAAgBC,EAAhB,KAGMC,EAAiB1K,aAAY,SAAClH,GAAD,OAAWA,EAAM2B,aACpD,EAAqCwJ,mBAAS,IAA9C,oBAAO0G,EAAP,KAAoBC,EAApB,KACA,EAAmC3G,mBAAS,IAA5C,oBAAO4G,EAAP,KAAmBC,EAAnB,KACMhL,EAAWC,cACXtH,EAAeuH,aAAY,SAAClH,GAAD,OAAWA,EAAM0B,OAAO/B,gBACzD,EAAsCwL,mBAAS,GAA/C,oBAAoB8G,GAApB,WAEMC,EAAYC,iBAAO,IAAIC,MAEvBC,EAAc,SAAC/J,GACG,WAAlBA,EAAE2D,OAAO3M,KACXqS,GAAW,SAACW,GAAD,mBAAC,eACPA,GADM,mBAERhK,EAAE2D,OAAO9B,KAAOoI,WAAWjK,EAAE2D,OAAOlC,YAGvC4H,GAAW,SAACW,GAAD,mBAAC,eACPA,GADM,mBAERhK,EAAE2D,OAAO9B,KAAO7B,EAAE2D,OAAOlC,WAIR,aAAlBzB,EAAE2D,OAAO3M,MACXqS,GAAW,SAACW,GAAD,mBAAC,eACPA,GADM,mBAERhK,EAAE2D,OAAO9B,MAAO7B,EAAE2D,OAAOlC,YAMhC+B,qBAAU,WACRoG,EAAUM,QAAQC,eAClBzL,E9ChCyB,SAAC3H,GAG5B,IAAIqT,EAAkBC,OAAOC,YAAYD,OAAOE,QAAQxT,GAASyT,QAAO,SAAAC,GAAC,OAAY,MAARA,EAAE,OAC/E,MAAO,CACLzT,KAAMoB,EACNrB,QAASqT,G8C0BAM,CAActB,MACtB,CAACA,IAEJ5F,qBAAU,WAEN8F,GACAA,EAAerR,MACfqR,EAAerR,KAAKL,MACpB0R,EAAerR,KAAKL,KAAKA,MACzB0R,EAAerR,KAAKL,KAAKA,KAAK+S,kBAE9BnB,EAAcF,EAAerR,KAAKL,KAAKA,KAAK+S,oBAE7C,CAACrB,IAEJ9F,qBAAU,WAEN8F,GACAA,EAAerR,MACfqR,EAAerR,KAAKL,MACpB0R,EAAerR,KAAKL,KAAKA,MACzB0R,EAAerR,KAAKL,KAAKA,KAAKgT,YAE9BlB,EAAaJ,EAAerR,KAAKL,KAAKA,KAAKgT,cAE5C,CAACtB,IAEJ,IAAMuB,EAAc,SAACzG,GACnBuF,EAAevF,IAIX9D,EACJ,wKACF,OACE,qCACGjJ,GAAgBA,EAAamE,GAC5B,eAAC,GAAD,CAAKsC,UAAU,0DAAf,SACGwL,EAAehS,UACd,eAAC,GAAD,IAEAiS,GACAA,EACGuB,MAAK,SAACxP,EAAG8M,GAAJ,OAAU9M,EAAEyP,SAAW3C,EAAE2C,YAC9B5G,KAAI,SAAC6G,EAAO5G,GAAR,OACH,gBAAC,GAAD,CAAKtG,UAAU,uBAAf,UACE,eAAC,GAAD,CAAMA,UAAU,sBAAhB,SACE,kCAASkN,EAAMC,YAAYpJ,SAG5B4H,GACCA,EAAWtF,KAAI,SAAC+G,EAAM9G,GAAP,eAEb8G,EAAKC,qBAAuBH,EAAMxP,IACV,UAAvB0P,EAAKE,SAASpU,MACU,QAAvBkU,EAAKE,SAASpU,KA4BhBkU,EAAKC,qBAAuBH,EAAMxP,IACT,gBAAvB0P,EAAKE,SAASpU,KACd,gBAAC,GAAD,CAAK8G,UAAU,yBAAf,UACE,gBAAC,GAAD,CAAOA,UAAU,8DAAjB,UACE,gCAAOoN,EAAKD,YAAYpJ,OACxB,uBAAM/D,UAAU,gCAAhB,SACGoN,EAAKE,SAASzE,UAGnB,0BACE0E,aAAc,kBAAMR,GAAa,IACjCS,aAAc,kBAAMT,EAAYzG,IAChCpC,SAAU,SAAChC,GAAD,OAAO+J,EAAY/J,IAC7BkC,SACoB,cAAlBgJ,EAAKK,SAEP1J,KAAMqJ,EAAKM,QACX/J,MACG2H,GAAWA,EAAQ8B,EAAKM,eAAaC,EAExC3J,YAAaoJ,EAAKD,YAAYnJ,YAC9BhE,UAAWwC,EAZb,UAcE,yBAAQmB,MAAM,GAAd,SACGyJ,EAAKD,YAAYnJ,cAEnBoJ,EAAKE,SAASM,UACbR,EAAKE,SAASM,SAASvH,KAAI,SAACwH,EAAQ1F,GAAT,OACzB,yBAAQxE,MAAOkK,EAAf,SACGA,GADyB1F,WA1BS7B,GAiC/C8G,EAAKC,qBAAuBH,EAAMxP,IACT,YAAvB0P,EAAKE,SAASpU,KACd,eAAC,GAAD,CAAK8G,UAAU,WAAf,SACE,gBAAC,GAAD,CACEA,UAAU,0EACVuN,aAAc,kBAAMR,GAAa,IACjCS,aAAc,kBAAMT,EAAYzG,IAHlC,UAKE,wBACEpN,KAAK,WACLkL,SACoB,cAAlBgJ,EAAKK,SAEP/P,GAAI0P,EAAKM,QACT3J,KAAMqJ,EAAKM,QACX/J,MACO2H,GAAWA,EAAQ8B,EAAKM,UAAa,KAE5C1N,UAAU,4BACVgE,YAAaoJ,EAAKD,YAAYnJ,YAC9BE,SAAU,SAAChC,GAAD,OAAO+J,EAAY/J,IAC7BqL,aAAc,kBAAMR,GAAa,IACjCS,aAAc,kBAAMT,EAAYzG,MAElC,gBAAC,GAAD,CACE4E,MAAOkC,EAAKM,QACZ1N,UAAU,yEAFZ,UAIE,gCAAOoN,EAAKD,YAAYpJ,OACxB,uBAAM/D,UAAU,gCAAhB,SACGoN,EAAKE,SAASzE,cA5BQvC,GAiC7B8G,EAAKC,qBAAuBH,EAAMxP,IACb,SAAvB0P,EAAKE,SAASpU,KACd,gBAAC,GAAD,CAAK8G,UAAU,kBAAf,UACE,gBAAC,GAAD,CAAOA,UAAU,8DAAjB,UACE,kCAAOoN,EAAKD,YAAYpJ,KAAxB,OACA,uBAAM/D,UAAU,gCAAhB,SACGoN,EAAKE,SAASzE,UAGnB,wBACE3P,KAAK,OACLyK,MACG2H,GAAWA,EAAQ8B,EAAKM,eAAaC,EAExC3N,UAAWwC,EACXwB,YAAaoJ,EAAKD,YAAYnJ,YAC9BD,KAAMqJ,EAAKM,QACXxJ,SAAU,SAAChC,GAAD,OAAO+J,EAAY/J,QAfKoE,GAmBtC,GAtHA,gBAAC,GAAD,CAAKtG,UAAU,yBAAf,UACE,gBAAC,GAAD,CAAOA,UAAU,8DAAjB,UACE,gCAAOoN,EAAKD,YAAYpJ,OACxB,wBAAM/D,UAAU,gCAAhB,cACIoN,EAAKE,SAASzE,KADlB,UAIF,wBACE3P,KAAK,SACLkL,SACoB,cAAlBgJ,EAAKK,SAEP1J,KAAMqJ,EAAKM,QACXI,KAAK,MACLpQ,GAAI0P,EAAKM,QACTlE,IAAG,UAAE4D,EAAKE,gBAAP,aAAE,EAAe9D,IACpBuE,IAAG,UAAEX,EAAKE,gBAAP,aAAE,EAAeS,IACpB/J,YAAaoJ,EAAKD,YAAYnJ,YAC9BE,SAAU,SAAChC,GAAD,OAAO+J,EAAY/J,IAC7BqL,aAAc,kBAAMR,GAAa,IACjCS,aAAc,kBAAMT,EAAYzG,IAChC0H,QAAS,kBAAMjB,EAAYzG,IAC3BtG,UAAWwC,EACXmB,MAAQ2H,GAAWA,EAAQ8B,EAAKM,UAAa,OAvBJpH,QAXVA,QAyInD,M,6BCpOF2H,I,OAAe,SAAC,GAAyB,IAAxBhL,EAAuB,EAAvBA,MAAOT,EAAgB,EAAhBA,WAC1B,OACI,sBAAKC,MAAM,6BAA6BzC,UAAWwC,EAAYpB,KAAK,OAAOD,QAAQ,YAAY0B,OAAQI,EAAvG,SACI,uBAAMC,cAAc,QAAQC,eAAe,QAAQL,YAAa,EAAGxB,EAAE,+FAU/E2M,GAAalL,aAAe,CAC1BP,WAAY,UACZS,MAAM,QAGKgL,U,8BCsOAC,GAzOI,WACjBC,0BAAe,KAAMC,MACrBD,0BAAe,KAAME,MACrBF,0BAAe,KAAMG,MAErB,MAAoB3N,eAAZ4E,EAAR,EAAQA,EAAG7E,EAAX,EAAWA,KAGLnH,GADOuH,aAAY,SAAClH,GAAD,OAAWA,EAAMO,QACrB2G,aAAY,SAAClH,GAAD,OAAWA,EAAM0B,OAAO/B,iBAGzD,EAAwCwL,mBAAS,CAC/CwJ,QAAShV,GAAgBA,EAAamE,GACtC8Q,oBAAqB,OACrBC,WAAY,IAAIlG,KAChBmG,SAAU,IAAInG,MAAK,IAAIA,MAAOoG,SAAQ,IAAIpG,MAAOqG,UAAY,IAC7DC,QAAS,KALX,oBAAOC,EAAP,KAAqBC,EAArB,KASA,EAA8BhK,mBAAS,IAAvC,oBAAO8J,EAAP,KAAgBG,EAAhB,KAGMC,EAAS,CACbC,SAAU,EACVtG,KAAM,EACNuG,SAAU,IAGZzJ,qBAAU,WACRsJ,EAAW,CAACC,MACX,IAGH,IAAMrO,EAAWC,cACjB6E,qBAAU,WACR9E,EhDXK,CACL1H,KAAMoB,EACNrB,QgDSyB6V,MACxB,CAACD,EAASC,IAGb,IAUMM,EAAqB,SAAClN,EAAGoE,GAC7B,IAAI+I,EAAM,aAAOR,GACjBQ,EAAO/I,GAAOpE,EAAE2D,OAAO9B,MACJ,QAAjB7B,EAAE2D,OAAO9B,KAAiB7B,EAAE2D,OAAOlC,MAAQwI,WAAWjK,EAAE2D,OAAOlC,OAEjEqL,EAAWK,GAEXN,GAAgB,SAAC7C,GAAD,mBAAC,eACZA,GADW,IAEd2C,QAASA,QA+Bb,OACE,qCACE,gBAAC,GAAD,CAAK7O,UAAU,iDAAf,UACE,eAAC,GAAD,CAAMA,UAAU,qCAAhB,SACGuF,EAAE,2BAEL,gBAAC,GAAD,CAAKvF,UAAU,yBAAf,UACE,gBAAC,GAAD,CAAKA,UAAU,SAAf,UACE,eAAC,GAAD,CAAOA,UAAU,yCAAjB,wBAGA,gBAAC,GAAD,CAAKA,UAAU,WAAf,UACE,eAAC,KAAD,CACEoE,UAAQ,EACRkL,iBAAe,EACfC,OAAQ7O,EAAKzG,SACbuV,SAAUV,EAAaL,WACvBzO,UAAU,sJACVgE,YAAY,aACZE,SAAU,SAAChC,GAAD,OAjCA,SAACA,GACvB6M,GAAgB,SAAC7C,GAAD,mBAAC,eACZA,GADW,IAEduC,WAAYvM,OA8BeuN,CAAgBvN,MAGnC,eAAC,GAAD,CAAKlC,UAAU,2BAAf,SACE,eAAC,GAAD,CAAciD,MAAM,oBAI1B,gBAAC,GAAD,CAAKjD,UAAU,SAAf,UACE,eAAC,GAAD,CAAOA,UAAU,yCAAjB,sBAGA,gBAAC,GAAD,CAAKA,UAAU,WAAf,UACE,eAAC,KAAD,CACEoE,UAAQ,EACRkL,iBAAe,EACfC,OAAQ7O,EAAKzG,SACbuV,SAAUV,EAAaJ,SACvB1O,UAAU,sJACVgE,YAAY,aACZE,SAAU,SAAChC,GAAD,OA9CF,SAACA,GACrB6M,GAAgB,SAAC7C,GAAD,mBAAC,eACZA,GADW,IAEdwC,SAAUxM,OA2CiBwN,CAAcxN,MAGjC,eAAC,GAAD,CAAKlC,UAAU,2BAAf,SACE,eAAC,GAAD,CAAciD,MAAM,uBAK5B,yBAAOjD,UAAU,cAAjB,UACE,iCACE,gCACE,qBAAIA,UAAU,YAAd,SACE,eAAC,GAAD,CAAOA,UAAU,yCAAjB,wBAIF,qBAAIA,UAAU,YAAd,SACE,eAAC,GAAD,CAAOA,UAAU,yCAAjB,oBAIF,qBAAIA,UAAU,YAAd,SACE,eAAC,GAAD,CAAOA,UAAU,yCAAjB,wBAID6O,GAAWA,EAAQlJ,OAAS,EAC3B,qBAAI3F,UAAU,cAEd,QAIN,iCACG6O,EAAQxI,KAAI,SAACsG,EAAGrG,GAAJ,OACX,gCACE,qBAAItG,UAAU,YAAd,SACE,wBACE9G,KAAK,SACL4U,KAAK,MACL1J,UAAQ,EACRpE,UAAU,sJACVgE,YAAY,WACZE,SAAU,SAAChC,GAAD,OAAOkN,EAAmBlN,EAAGoE,IACvCvC,KAAK,eAGT,qBAAI/D,UAAU,YAAd,SACE,wBACE9G,KAAK,OACLkL,UAAQ,EACRpE,UAAU,sJACVgE,YAAY,OACZD,KAAK,OACLG,SAAU,SAAChC,GAAD,OAAOkN,EAAmBlN,EAAGoE,QAG3C,qBAAItG,UAAU,YAAd,SACE,wBACE9G,KAAK,SACLsQ,IAAI,IACJsE,KAAK,MACL1J,UAAQ,EACRT,MACEkL,EAAQvI,GAAO6I,SAEjBnP,UAAU,uJACVgE,YAAY,WACZD,KAAK,WACLG,SAAU,SAAChC,GAAD,OAAOkN,EAAmBlN,EAAGoE,QAG1CuI,GAAWA,EAAQlJ,OAAS,EAC3B,8BACE,eAAC,GAAD,CACEzM,KAAK,SACLsH,QAAS,kBA/IV,SAAC8F,GAClB,IAAI+I,EAAM,aAAOR,GACjBQ,EAAOM,OAAOrJ,EAAO,GAErByI,GAAgB,SAAC7C,GAAD,mBAAC,eACVA,GADS,IAEZ2C,QAAQQ,OAEZL,EAAWK,GAuIsBO,CAAWtJ,IAC1BtG,UAAU,uKAHZ,SAKE,eAAC,GAAD,QAIJ,KAhDKsG,WAsDf,eAAC,GAAD,CAAKtG,UAAU,gBAAf,SACE,eAAC,GAAD,CACE9G,KAAK,SACLsH,QAAS,SAAC0B,GAAD,OAtLH,SAACA,GACfA,EAAE6D,iBACFiJ,GAAW,SAAC9C,GAAD,6BAAmBA,GAAnB,CAA8B+C,OACzCF,GAAgB,SAAC7C,GAAD,mBAAC,eACVA,GADS,IAEZ2C,QAAQA,OAiLYgB,CAAQ3N,IACxBlC,UAAU,kNAHZ,2BC9NJ8P,GAAQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACb,OACKA,GAAmBA,EAAgBtW,OAASsW,EAAgBtW,MAAMuW,SAAWD,EAAgBtW,MAAMuW,SAAWD,EAAgBtW,OAASsW,EAAgBtW,MAAMA,MAC1J,qCACI,gBAAC,GAAD,CAAUP,KAAK,QAAf,UAEQ6W,EAAgBtW,MAAMuW,QAGrBD,EAAgBtW,MAAMA,MAAS,4BAA8B,QAKxE,IAGRwW,GAAU,kBACZ,gBAAC,GAAD,CAAU/W,KAAK,UAAf,2BACkB,wBADlB,kCAuHWgX,GAlHO,WAClB,IAAMtP,EAAWC,cACjB,EAAoBF,eAAZ4E,EAAR,EAAQA,EAAG7E,EAAX,EAAWA,KACLvG,EAAO2G,aAAY,SAAAlH,GAAK,OAAIA,EAAMO,QAClCa,EAAe8F,aAAY,SAAAlH,GAAK,OAAIA,EAAM4B,UAAUR,gBACpDwQ,EAAiB1K,aAAY,SAAAlH,GAAK,OAAIA,EAAM2B,aAC5ChC,EAAeuH,aAAY,SAAAlH,GAAK,OAAIA,EAAM0B,OAAO/B,gBACjDC,EAAYsH,aAAY,SAAAlH,GAAK,OAAIA,EAAM2B,UAAU/B,aACjDuW,EAAkBjP,aAAY,SAAAlH,GAAK,OAAIA,EAAM4B,aAEnD,GADmBsF,aAAY,SAAAlH,GAAK,OAAIA,EAAM0B,UACEyJ,mBAC5C,CACI,OAAU,CACNwK,OAAQ7O,EAAKzG,UAEjB,QAAW,GACX,aAAgB,MANxB,oBAAOkW,EAAP,KAAyBC,EAAzB,KAcA1K,qBAAU,WACN0K,GAAoB,SAAAlE,GAAS,kCACtBA,GADsB,IAEzBmE,QAASlW,GAAQA,EAAKM,gBAAkBN,EAAKM,eAC7CqU,aAAc3U,GAAQA,EAAKK,aAAeL,EAAKK,mBAIpD,CAACL,IAMJ,OACI,qCAESZ,GACGA,EAAamE,IACb8N,GACAA,EAAerR,MACfqR,EAAerR,KAAKL,MACpB0R,EAAerR,KAAKL,KAAKA,MACzB0R,EAAerR,KAAKL,KAAKA,KAAK+S,kBAC9BrB,EAAerR,KAAKL,KAAKA,KAAKgT,WAC7BtB,EAAerR,KAAKL,KAAKA,KAAK+S,iBAAiBlH,OAAS,GACrD6F,EAAerR,KAAKL,KAAKA,KAAKgT,WAAWnH,OAAS,GAChDpM,GAAgBA,EAAa+W,aAC3B,eAAC,GAAD,IAEA,gBAAC,GAAD,CAAM/M,SApBN,SAACrB,GACrBA,EAAE6D,iBACFnF,E/C5DC,CACL1H,KAAMyB,EACN1B,Q+C0D4BkX,KAkBJ,UACI,eAAC,GAAD,CAAOJ,gBAAiBA,IAEnBxW,GAAgBA,EAAagX,WAAahX,EAAagX,UAAU,GAC9D,gBAAC,GAAD,CAAMvQ,UAAU,yGAAhB,0BAEQzG,EAAagX,UAAU,GAAGtK,MAFlC,gBAMA,eAAC,GAAD,CAAMjG,UAAU,yGAAhB,gDAIR,gBAAC,GAAD,CAAWA,UAAU,qDAArB,UACI,gBAAC,GAAD,CAAKA,UAAU,yBAAf,UACI,eAAC,GAAD,CAAKA,UAAU,8BAAf,SACI,eAACwQ,GAAD,MAEJ,eAAC,GAAD,CAAKxQ,UAAU,8BAAf,SACI,eAAC,GAAD,SAGR,gBAAC,GAAD,CAAQ9G,KAAK,SACT8G,UAAU,8NADd,UAGShF,EAAgB,eAAC,GAAD,IAAkB,GAEtCuK,EAAE,6BAKjB,eAAC,GAAD,CAAUrM,KAAK,QAAf,gEAILM,EACG,eAAC,GAAD,CAAKwG,UAAU,oDAAf,SACI,eAAC,GAAD,CAAawC,WAAW,4CACpBD,cAAc,oBACdD,YAAY,wBAGpB,qCACI,eAAC,GAAD,CAAUpJ,KAAK,OAAf,2FCtHbuX,GAZG,WACd,OACI,qCACI,gBAAC,GAAD,CAAWzQ,UAAU,UAArB,UACI,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,UCJVd,GAAQH,KAwBC2R,sBAZf,WACE,OACE,eAAC,IAAD,CAAUxR,MAAOA,GAAjB,SACE,eAAC,IAAD,UACE,eAAC,IAAD,UACE,eAAC,IAAD,CAAOyR,OAAK,EAACC,KAAK,IAAIC,WAfNC,EAekCL,GAfjB,SAAC9J,GAAD,OAC1C,eAAC,GAAD,UACC,eAAC,WAAD,CAAUoK,SACR,8CADF,SAGC,eAACD,EAAD,eAAkBnK,kBALI,IAACmK,KCCXE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpU,MAAK,YAAkD,IAA/CqU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,yFCCdvQ,KACCxE,IAAIsV,MACJtV,IAAIuV,MACJvV,IAAIwV,MACJC,KAAK,CACFC,UAAW,CACPtD,GAAIuD,GACJxD,GAAIyD,GACJ1D,GAAI2D,GACJC,GAAIC,IAGRC,IAAK,KAELC,YAAa,KAEbC,OAAO,EACPC,GAAI,CAAC,gBACLC,UAAW,eACXC,aAAc,IACdC,cAAe,CACXC,aAAa,EACbC,gBAAiB,KAErBC,MAAO,CACHC,MAAM,EACNC,SAAU,yBACVC,UAAW,gBACXC,OAAQ,aAIDrS,UAAf,EChCAsS,IAASC,OACP,eAACC,GAAA,EAAD,CAAkBxS,KAAMA,GAAxB,SACI,eAAC,IAAMyS,WAAP,UACE,eAAC,GAAD,QAGNC,SAASC,eAAe,qBAM1BrC,O","file":"static/js/main.9356b4f0.chunk.js","sourcesContent":["\n\nexport const SEARCH = {\n    // Search drugs\n    SEARCH_DRUGS_START: 'SEARCH_DRUGS_START',\n    SEARCH_DRUGS_SUCCESS: 'SEARCH_DRUGS_SUCCESS',\n    SEARCH_DRUGS_FAIL: 'SEARCH_DRUGS_FAIL',\n    //\n    SET_DRUG:'SET_DRUG',\n    SET_DRUG_SUCCESS:'SET_DRUG_SUCCESS',\n    SET_DRUG_FAIL:'SET_DRUG_FAIL',\n\n    //select single drug\n    SELECT_SINGLE_DRUG:'SELECT_SINGLE_DRUG',\n    SELECT_SINGLE_DRUG_SUCCESS:'SELECT_SINGLE_DRUG_SUCCESS',\n    SELECT_SINGLE_DRUG_FAIL:'SELECT_SINGLE_DRUG_FAIL'\n  };\n  \n  \n  export const searchDrugs = (payload) => {\n\n    return {\n      type: SEARCH.SEARCH_DRUGS_START,\n      payload\n    };\n  };\n  \n  export const searchDrugsSuccess = (payload)=>{\n\n    return {\n      type:SEARCH.SEARCH_DRUGS_SUCCESS,\n      payload\n    }\n  }\n  \n  export const searchDrugsFail = (payload)=>{\n    return {\n      type:SEARCH.SEARCH_DRUGS_FAIL,\n      payload\n    }\n  }\n\n  //search drug by drug id\n  export const selectSingleDrug = (payload) => {\n\n    return {\n      type: SEARCH.SELECT_SINGLE_DRUG,\n      payload\n    };\n  };\n  \n  export const selectSingleDrugSuccess = (payload) => {\n\n    return {\n      type: SEARCH.SELECT_SINGLE_DRUG_SUCCESS,\n      payload\n    };\n  };\n  export const selectSingleDrugFail = (payload) => {\n\n    return {\n      type: SEARCH.SELECT_SINGLE_DRUG_FAIL,\n      payload\n    };\n  };\n\n  \n  export const setDrug = (payload)=>{\n    return {\n      type: SEARCH.SET_DRUG,\n      payload\n    };\n  }\n\n  export const setDrugSuccess = (payload)=>{\n    return {\n      type: SEARCH.SET_DRUG_SUCCESS,\n      payload\n    };\n  }\n\n  export const setDrugFail= (payload)=>{\n    return {\n      type: SEARCH.SET_DRUG_FAIL,\n      payload\n    };\n  }","import { SEARCH } from '../actions/searchActions'\n\nconst initialState = {\n  drugs: null,\n  selectedDrug: null,\n  isLoading: false,\n  error: null,\n  drug: null\n};\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEARCH.SEARCH_DRUGS_START:\n      return { ...state, drugs: null, isLoading: true, error: null }\n\n    case SEARCH.SEARCH_DRUGS_SUCCESS:\n      return { ...state, drugs: action.payload.data, isLoading: false, error: null }\n\n    case SEARCH.SEARCH_DRUGS_FAIL:\n      return { ...state, drugs: action.payload, isLoading: false, error: null }\n\n    case SEARCH.SELECT_SINGLE_DRUG:\n      return { ...state, drug: null, isLoading: true, error: null }\n\n    case SEARCH.SELECT_SINGLE_DRUG_SUCCESS:\n      return { ...state, drug: action.payload.data, isLoading: false, error: null }\n\n    case SEARCH.SELECT_SINGLE_DRUG_FAIL:\n      return { ...state, drug: action.payload, isLoading: false, error: null }\n\n    case SEARCH.SET_DRUG:\n      return { ...state, selectedDrug: null, isLoading: true, error: null }\n\n    case SEARCH.SET_DRUG_SUCCESS:\n      return { ...state, selectedDrug: action.payload, isLoading: false, error: null }\n\n    case SEARCH.SET_DRUG_FAIL:\n      return { ...state, selectedDrug: action.payload, isLoading: false, error: null }\n\n    default:\n      return state;\n  }\n}\n\nexport default searchReducer;\n","export const COVARIANT = {\n  // Covariant form\n  GET_COVARIANT: 'GET_COVARIANT',\n  GET_COVARIANT_SUCCESS: 'GET_COVARIANT_SUCCESS',\n  GET_COVARIANT_FAIL: 'GET_COVARIANT_FAIL',\n\n  // Covariant form\n  GET_COVARIANT_BYID: 'GET_COVARIANT_BYID',\n  GET_COVARIANT_BYID_SUCCESS: 'GET_COVARIANT_BYID_SUCCESS',\n  GET_COVARIANT_BYID_FAIL: 'GET_COVARIANT_BYID_FAIL',\n};\n//get covariant form data\nexport const getCovariant = (language) => {\n  return {\n    type: COVARIANT.GET_COVARIANT,\n    language\n  };\n};\n\nexport const getCovariantSuccess = () => {\n  return {\n    type: COVARIANT.GET_COVARIANT_SUCCESS\n  }\n}\n\nexport const getCovariantFail = () => {\n  return {\n    type: COVARIANT.GET_COVARIANT_FAIL\n  }\n}\n\n//get covariant form data by drug id actions\nexport const getCovariantById = (payload,language) => {\n  return {\n    type: COVARIANT.GET_COVARIANT_BYID,\n    payload,\n    language\n  };\n};\n\nexport const getCovariantByIdSuccess = (payload) => {\n\n  return {\n    type: COVARIANT.GET_COVARIANT_BYID_SUCCESS,\n    payload\n  }\n}\n\nexport const getCovariantByIdFail = (payload) => {\n  return {\n    type: COVARIANT.GET_COVARIANT_BYID_FAIL,\n    payload\n  }\n}\n\n\n","import { COVARIANT } from '../actions/covariantActions';\n\nconst initialState = {\n  form: null,\n  form_by_drug_id: null,\n  isLoading: false,\n  error: null\n};\n\nconst covariantReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case COVARIANT.GET_COVARIANT:\n      return { ...state, form: null, isLoading: true, error: null }\n\n    case COVARIANT.GET_COVARIANT_SUCCESS:\n      return { ...state, form: action.payload, isLoading: false, error: null }\n\n      case COVARIANT.GET_COVARIANT_FAIL:\n        return { ...state, form: action.payload, isLoading: false, error: null }\n\n    case COVARIANT.GET_COVARIANT_BYID:\n      return { ...state, form: null, isLoading: true, error: null }\n\n    case COVARIANT.GET_COVARIANT_BYID_SUCCESS:\n      return { ...state, form: action.payload, isLoading: false, error: null }\n\n    case COVARIANT.GET_COVARIANT_BYID_FAIL:\n      return { ...state, form: action.payload, isLoading: false, error: null }\n    default:\n      return state;\n  };\n};\n\nexport default covariantReducer;\n","\n\nexport const FORM = {\n  // Intake form\n  COVARIANT_FORM_START: 'COVARIANT_FORM_START',\n  COVARIANT_FORM_SUCCESS: 'COVARIANT_FORM_SUCCESS',\n  COVARIANT_FORM_FAIL: 'COVARIANT_FORM_FAIL',\n\n  // Covariant form\n  DOSAGE_FORM_START: 'DOSAGE_FORM_START',\n  DOSAGE_FORM_SUCCESS: 'DOSAGE_FORM_SUCCESS',\n  DOSAGE_FORM_FAIL: 'DOSAGE_FORM_FAIL',\n};\n\n\n//Covarient form actions\nexport const covariantForm = (payload) => {\n\n  //filter null values to the reducer\n  let filteredPayload = Object.fromEntries(Object.entries(payload).filter(v => v[1] != null));\n  return {\n    type: FORM.COVARIANT_FORM_START,\n    payload: filteredPayload\n  };\n};\n\nexport const covariantFormSuccess = (payload) => {\n  return {\n    type: FORM.COVARIANT_FORM_SUCCESS,\n    payload\n  }\n}\n\nexport const covariantFormFail = (payload) => {\n  return {\n    type: FORM.COVARIANT_FORM_FAIL,\n    payload\n  }\n}\n\n//dosage form actions\nexport const dosageFormStart = (payload) => {\n  return {\n    type: FORM.DOSAGE_FORM_START,\n    payload\n  };\n};\n\nexport const dosageFormSuccess = (payload) => {\n  return {\n    type: FORM.DOSAGE_FORM_SUCCESS,\n    payload\n  }\n}\n\nexport const dosageFormFail = (payload) => {\n  return {\n    type: FORM.DOSAGE_FORM_FAIL,\n    payload\n  }\n}\n\n\n","import { FORM } from '../actions/formActions'\n\nconst initialState = {\n  dosage_form: null,\n  covarient_form:null,\n  isLoading: false,\n  error: null\n};\n\nconst formReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FORM.COVARIANT_FORM_START:\n      return { ...state, covarient_form: null, isLoading: true, error: null }\n\n    case FORM.COVARIANT_FORM_SUCCESS:\n      return { ...state, covarient_form: action.payload, isLoading: false, error: null }\n\n    case FORM.COVARIANT_FORM_FAIL:\n      return { ...state, covarient_form: action.payload, isLoading: false, error: null }\n\n      case FORM.DOSAGE_FORM_START:\n        return { ...state, dosage_form: null, isLoading: true, error: null }\n  \n      case FORM.DOSAGE_FORM_SUCCESS:\n        return { ...state, dosage_form: action.payload, isLoading: false, error: null }\n  \n      case FORM.DOSAGE_FORM_FAIL:\n        return { ...state, dosage_form: action.payload, isLoading: false, error: null }\n\n    default:\n      return state;\n  }\n}\n\nexport default formReducer;\n","\n\nexport const SIMULATOR = {\n  // Search drugs\n  SIMULATOR_START: 'SIMULATOR_START',\n  SIMULATOR_SUCCESS: 'SIMULATOR_SUCCESS',\n  SIMULATOR_FAIL: 'SIMULATOR_FAIL',\n  SIMULATOR_RESET: 'SIMULATOR_RESET',\n  SET_MOLECULE:'SET_MOLECULE'\n};\n\n\nexport const simulatorStart = (payload) => {\n\n  return {\n    type: SIMULATOR.SIMULATOR_START,\n    payload\n  };\n};\n\nexport const simulatorSuccess = (payload) => {\n\n  return {\n    type: SIMULATOR.SIMULATOR_SUCCESS,\n    payload\n  }\n}\n\nexport const simulatorFail = (payload) => {\n  return {\n    type: SIMULATOR.SIMULATOR_FAIL,\n    payload\n  }\n}\n\nexport const simulatorReset = () => {\n  const payload = null;\n  return {\n    type: SIMULATOR.SIMULATOR_RESET,\n    payload\n  }\n}\n\nexport const setMoleculeAction = (payload) =>{\n  return {\n    type:SIMULATOR.SET_MOLECULE,\n    payload\n  }\n\n}\n\n","import { SIMULATOR } from '../actions/simulatorActions'\n\nconst initialState = {\n  results: null,\n  isSimulating: false,\n  error: null,\n  isSimulated: false,\n  molecule: 0\n};\n\nconst simulatorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIMULATOR.SIMULATOR_START:\n      return { ...state, results: null, isSimulating: true, error: null, isSimulated: false }\n\n    case SIMULATOR.SIMULATOR_SUCCESS:\n      return { ...state, results: action.payload, isSimulating: false, error: null, isSimulated: true }\n\n    case SIMULATOR.SIMULATOR_FAIL:\n      return { ...state, error: action.payload, isSimulating: false, isSimulated: false }\n\n    case SIMULATOR.SIMULATOR_RESET:\n      return { ...state, error: action.payload, results: action.payload, isSimulating: false, isSimulated: false }\n\n    case SIMULATOR.SET_MOLECULE:\n      return { ...state, molecule: action.payload }\n    default:\n      return state;\n  }\n}\n\nexport default simulatorReducer;\n","import { combineReducers } from 'redux';\nimport searchReducer from './searchReducers';\nimport covariantReducer from './covariantReducer';\nimport formReducer from './formReducer';\nimport simulatorReducer from './simulatorReducer';\n\nconst rootReducer = combineReducers({\n  search: searchReducer,\n  covariant: covariantReducer,\n  form:formReducer,\n  simulator:simulatorReducer\n});\n\nexport default rootReducer;\n","import axios from 'axios';\nimport { environment } from '../environment/index';\n//create axios instance\nlet http = axios.create();\n//dev api\nlet BASE_URL = 'https://partners-dev.exactcure.com/api';\nlet AUTH_TOKEN = \"woFpqF7HVJZwWPbc1XiNkcEh0J6rHd5Pid0b9WGr\";\n\nswitch (environment.env) {\n  case 'dev':\n    BASE_URL = 'https://partners-dev.exactcure.com/api';\n    AUTH_TOKEN = \"woFpqF7HVJZwWPbc1XiNkcEh0J6rHd5Pid0b9WGr\";\n    break;\n\n  case 'stg':\n    BASE_URL = 'https://partners-dev.exactcure.com/api';\n    AUTH_TOKEN = \"woFpqF7HVJZwWPbc1XiNkcEh0J6rHd5Pid0b9WGr\";\n    break;\n\n  case 'prod':\n    BASE_URL = 'https://partners-plive.exactcure.com/api';\n    AUTH_TOKEN = 'hWObUqjGoVAGpV1kqtzntjdGBhy1w77EEyHYWYPw'\n    break;\n}\n\n\n\nhttp.defaults.baseURL = BASE_URL;\naxios.interceptors.request.use(config => {\n  config.headers['Authorization'] = `Bearer ` + AUTH_TOKEN;\n  config.headers['Content-Type'] = 'application/json';\n  return config;\n}, error => {\n  Promise.reject(error);\n});\n\naxios.interceptors.response.use((response) => {\n  return Promise.resolve(response);\n}, (error) => {\n  return Promise.reject(error);\n});\n\nexport const createHttpClient = (url, method, data) => {\n  return new Promise((resolve, reject) => {\n    axios({\n      method,\n      url: BASE_URL + url,\n      data: JSON.stringify(data)\n    }).then(response => {\n      if (response.status === 200 || response.status === 201) {\n        resolve(response);\n      } else {\n        reject('Response is not success');\n      }\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\n\nexport const HTTP = createHttpClient;\n","//search api\nexport const SEARCH_DRUGS = {\n    DRUGS: (search, limit) => `/drugs?search=${search}&limit=${limit}`,\n    DRUG: (DRUG_ID) => `/drugs/${DRUG_ID}`\n};\n\n//intake\nexport const INTAKE = {\n    INTERACTIONS: `/simulations`\n};\n\n//simulations \nexport const SIMULATIONS = {\n    SIMULATIONS: `/simulations`,\n    SIMULATIONS_V2: `/v2/simulations`\n};\n//covariant \nexport const COVARIANT = {\n    GET_FORM:(language)=>`/covariates?locale=${language}`,\n    GET_FORM_BY_ID: (drugId,language) => `/covariates/${drugId}?locale=${language}`\n}\n\n//drug interactions\nexport const INTERACTIONS = {\n    DRUGS_INTERACTIONS: `/drugs/interactions`,\n    DRUGS_INTERACTIONS_ASSOCIATIVE: `/drugs/interactions/associative`,\n    DRUGS_INTERACTIONS_BY_ID: (drugId) => `/drugs/interactions/${drugId}`\n}","import { HTTP } from '../interceptors/interceptors';\nimport { SEARCH_DRUGS } from \"../services/constants\";\n\n//search all drugs by query\nexport const apiSearchDrugs = async (payload) => {\n    return await HTTP(SEARCH_DRUGS.DRUGS(payload.search, payload.limit), 'get')\n};\n\n//search single drug by id\nexport const apiSearchDrugById = async (id) => {\n    return await HTTP(SEARCH_DRUGS.DRUG(id), 'get');\n};","import { take, takeLatest, call, put } from \"redux-saga/effects\";\nimport {\n  SEARCH,\n  searchDrugsSuccess,\n  setDrugSuccess,\n  setDrugFail\n} from \"../actions/searchActions\";\n\nimport { apiSearchDrugs, apiSearchDrugById } from \"../../API/search\";\n\nexport function* watchSearchDrugs() {\n  while (true) {\n    const { payload } = yield take(SEARCH.SEARCH_DRUGS_START);\n      const response = yield call(apiSearchDrugs,payload);\n      try{\n        yield put(searchDrugsSuccess(response));\n      }catch(error){\n        yield put({type:SEARCH.SEARCH_DRUGS_FAIL, response});\n      }\n  }\n}\n\n\nexport function* watchSearchDrugsById() {\n  while (true) {\n    const { payload } = yield take(SEARCH.SELECT_SINGLE_DRUG);\n      const response = yield call(apiSearchDrugById,payload);\n      try{\n        yield put(searchDrugsSuccess(response));\n      }catch(error){\n        yield put({type:SEARCH.SELECT_SINGLE_DRUG_FAIL, response});\n      }\n  }\n}\n\n\nexport function* watchSetDrug() {\n  while (true) {\n    const { payload } = yield take(SEARCH.SET_DRUG);\n      try{\n        yield put(setDrugSuccess(payload));\n      }catch(error){\n        yield put({type:SEARCH.SET_DRUG_FAIL,error});\n      }\n  }\n}","import { take, takeLatest, call, put } from \"redux-saga/effects\";\nimport {\n  FORM,\n  covariantFormSuccess,\n  dosageFormSuccess\n\n} from \"../actions/formActions\";\n\nexport function* watchFormIntake() {\n  while (true) {\n    const { payload } = yield take(FORM.COVARIANT_FORM_START);\n      try{\n        yield put({type:FORM.COVARIANT_FORM_SUCCESS,payload});\n      }catch(error){\n        yield put({type:FORM.COVARIANT_FORM_FAIL, error});\n      }\n  }\n}\n\nexport function* watchFormCovariant() {\n    while (true) {\n      const { payload } = yield take(FORM.DOSAGE_FORM_START);\n        try{\n          yield put(dosageFormSuccess(payload));\n        }catch(error){\n          yield put({type:FORM.DOSAGE_FORM_FAIL, error});\n        }\n    }\n  }\n  \n","import { HTTP } from \"../interceptors/interceptors\"\nimport { COVARIANT } from \"../services/constants\"\n\n//get covariant form\nexport const apiGetCovariant = async (language) => {\n    return await HTTP(COVARIANT.GET_FORM(language), 'GET', '');\n\n}\n//get covariant form by id\nexport const apiGetCovariantById = async (drugId,language) => {\n    return await HTTP(COVARIANT.GET_FORM_BY_ID(drugId,language), 'GET', '');\n}","import { take, takeLatest, call, put } from \"redux-saga/effects\";\nimport {\n  COVARIANT,\n  getCovariantByIdSuccess\n} from \"../actions/covariantActions\";\n\nimport { apiGetCovariant, apiGetCovariantById } from \"../../API/covariant\";\nexport function* watchGetCovariant() {\n  while (true) {\n    const language = yield take(COVARIANT.GET_COVARIANT);\n    const response = yield call(apiGetCovariant, language);\n    try {\n      yield put({ type: COVARIANT.GET_COVARIANT_SUCCESS, response });\n    } catch (error) {\n      yield put({ type: COVARIANT.GET_COVARIANT_FAIL, error });\n    };\n  };\n};\n\nexport function* watchGetCovariantById() {\n  while (true) {\n    const { payload,language } = yield take(COVARIANT.GET_COVARIANT_BYID);\n    const response = yield call(apiGetCovariantById, payload,language);\n    try {\n      yield put(getCovariantByIdSuccess(response));\n    } catch (error) {\n      yield put({ type: COVARIANT.GET_COVARIANT_BYID_FAIL, error });\n    };\n  };\n};\n\n","import { HTTP } from '../interceptors/interceptors';\nimport { SIMULATIONS} from \"../services/constants\"\n\nexport const apiSimulations = (payload) => {\n    return HTTP.get(SIMULATIONS.SIMULATIONS(payload))\n};\n\nexport const apiSimulations_v2 = async (payload) => {\n    return await HTTP(SIMULATIONS.SIMULATIONS_V2,'POST',payload)\n};","import { take, takeLatest, call, put } from \"redux-saga/effects\";\nimport {\n  SIMULATOR,\n  simulatorSuccess,\n  simulatorFail\n} from \"../actions/simulatorActions\";\n\nimport { apiSimulations, apiSimulations_v2 } from \"../../API/simulations\";\n\nexport function* watchSimulator_v2() {\n  while (true) {\n    const { payload } = yield take(SIMULATOR.SIMULATOR_START);\n\n    try {\n      const response = yield call(apiSimulations_v2, payload);\n      yield put(simulatorSuccess(response));\n    } catch (error) {\n      yield put(simulatorFail(error.response.data));\n    }\n  }\n}\n\nexport function* watchSimulator() {\n  while (true) {\n    const { payload } = yield take(SIMULATOR.SIMULATOR_START);\n    const response = yield call(apiSimulations, payload);\n    try {\n      yield put(simulatorSuccess(response));\n    } catch (error) {\n      yield put({ type: SIMULATOR.SIMULATOR_FAIL, response });\n    }\n  }\n}\n","import { all } from 'redux-saga/effects';\nimport * as searchSaga from './searchSaga';\nimport * as formSaga from './formSaga';\nimport * as covariantSaga from './covariantSaga';\nimport * as simulatorSaga from './simulatorSaga';\n\n\nfunction* rootSaga() {\n  yield all([\n    searchSaga.watchSearchDrugs(),\n    searchSaga.watchSearchDrugsById(),\n    searchSaga.watchSetDrug(),\n    formSaga.watchFormIntake(),\n    formSaga.watchFormCovariant(),\n    covariantSaga.watchGetCovariant(),\n    covariantSaga.watchGetCovariantById(),\n    simulatorSaga.watchSimulator_v2()\n  ]);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware, logger)\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n  \nexport default configureStore;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Logo = () => {\n    const logo =  \"https://www.exactcure.com/wp-content/uploads/2020/03/logo-150png-e1584111359553.png\";\n    return (\n        <Link to=\"/\">\n            <img src={logo} alt=\"Exact Cure\"/>\n        </Link>\n    )\n}\nexport default Logo","import styled from 'styled-components'\n\nexport const ContainerElement = styled.section`\nposition:relative;\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContainerElement } from './Container.styles';\n\nconst Container = ({ children, className }) => {\n  return (\n    <ContainerElement className={className}>\n      {children}\n    </ContainerElement>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.any.isRequired,\n  className: PropTypes.string\n};\nexport default Container;\n","import styled from 'styled-components'\n\nexport const BoxElement = styled.div\n`${({ width }) => width};\n${({ height }) => height};\n${({ margin }) => margin};\n${({ padding }) => padding};\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BoxElement } from \"./Box.styles\"\nconst Box = ({ children, className, width, height, margin, padding, onClick }) => {\n    return (\n        <BoxElement\n            width={width}\n            height={height}\n            margin={margin}\n            padding={padding}\n            onClick={onClick}\n            className={className}>\n            {children}\n        </BoxElement>\n    )\n}\n\nBox.propTypes = {\n    children: PropTypes.any.isRequired,\n    className: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n    margin: PropTypes.string,\n    padding: PropTypes.string,\n    onClick: PropTypes.func\n}\nexport default Box","import React from 'react';\nimport Logo from '../../../assets/Logo';\nimport Container from '../../../components/atoms/Container/index'\nimport Box from \"../../atoms/Box\";\nimport { Menu, Transition } from \"@headlessui/react\";\nimport { useTranslation } from 'react-i18next';\nimport { getCovariantById } from '../../../redux/actions/covariantActions';\nimport { useDispatch, useSelector } from 'react-redux';\nconst Header = () => {\n    const { i18n } = useTranslation();\n    const dispatch = useDispatch();\n    const selectedDrug = useSelector(state => state.search.selectedDrug);\n    const changeLanguage = (language) => {\n        i18n.changeLanguage(language)\n\n        //get locale form data with drug id\n        if (selectedDrug && selectedDrug.id) {\n            setTimeout(() => {\n                dispatch(getCovariantById(selectedDrug.id, i18n.language))\n            }, 100);\n        }\n    }\n\n\n    return (\n        <>\n            <Container className=\"container mx-auto z-50\">\n                <header className=\"flex justify-between py-4\">\n                    <Logo />\n                    <Box className=\"flex items-center\">\n\n                        <div className=\"relative inline-block text-left\">\n                            <Menu>\n                                {({ open }) => (\n                                    <>\n                                        <span className=\"rounded-md shadow-sm\">\n                                            <Menu.Button className=\"inline-flex justify-center w-full px-4 py-2 text-sm font-medium leading-5 text-gray-700 transition duration-150 ease-in-out bg-white border border-gray-300 rounded-md hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-50 active:text-gray-800\">\n                                                <span>Language</span>\n                                                <svg\n                                                    className=\"w-5 h-5 ml-2 -mr-1\"\n                                                    viewBox=\"0 0 20 20\"\n                                                    fill=\"currentColor\"\n                                                >\n                                                    <path\n                                                        fillRule=\"evenodd\"\n                                                        d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                                                        clipRule=\"evenodd\"\n                                                    />\n                                                </svg>\n                                            </Menu.Button>\n                                        </span>\n\n                                        <Transition\n                                            show={open}\n                                            enter=\"transition ease-out duration-100\"\n                                            enterFrom=\"transform opacity-0 scale-95\"\n                                            enterTo=\"transform opacity-100 scale-100\"\n                                            leave=\"transition ease-in duration-75\"\n                                            leaveFrom=\"transform opacity-100 scale-100\"\n                                            leaveTo=\"transform opacity-0 scale-95\"\n                                        >\n                                            <Menu.Items\n                                                static\n                                                className=\"absolute right-0 w-56 mt-2 origin-top-right bg-white border border-gray-200 divide-y divide-gray-100 rounded-md shadow-lg outline-none\"\n                                            >\n                                                <div className=\"py-1\">\n                                                    <Menu.Item onClick={(e) => changeLanguage('en')}>\n                                                        {({ active }) => (\n                                                            <a\n                                                           \n                                                                className={`${active\n                                                                    ? \"bg-gray-100 text-gray-900\"\n                                                                    : \"text-gray-700\"\n                                                                    } flex justify-between w-full px-4 py-2 text-sm leading-5 text-left`}\n                                                            >\n                                                                En (English)\n                                                            </a>\n                                                        )}\n                                                    </Menu.Item>\n                                                    <Menu.Item onClick={(e) => changeLanguage('fr')}>\n                                                        {({ active }) => (\n                                                            <a\n                                                               \n                                                                className={`${active\n                                                                    ? \"bg-gray-100 text-gray-900\"\n                                                                    : \"text-gray-700\"\n                                                                    } flex justify-between w-full px-4 py-2 text-sm leading-5 text-left`}\n                                                            >\n                                                                Fr (French)\n                                                            </a>\n                                                        )}\n                                                    </Menu.Item>\n\n                                                    <Menu.Item onClick={(e) => changeLanguage('es')}>\n                                                        {({ active }) => (\n                                                            <a\n                                                           \n                                                                className={`${active\n                                                                    ? \"bg-gray-100 text-gray-900\"\n                                                                    : \"text-gray-700\"\n                                                                    } flex justify-between w-full px-4 py-2 text-sm leading-5 text-left`}\n                                                            >\n                                                                Es (Spanish)\n                                                            </a>\n                                                        )}\n                                                    </Menu.Item>\n\n                                                    {/* <Menu.Item onClick={(e) => changeLanguage('br')}>\n                                                        {({ active }) => (\n                                                            <a\n                                                            \n                                                                className={`${active\n                                                                    ? \"bg-gray-100 text-gray-900\"\n                                                                    : \"text-gray-700\"\n                                                                    } flex justify-between w-full px-4 py-2 text-sm leading-5 text-left`}\n                                                            >\n                                                                Br (Brazil)\n                                                            </a>\n                                                        )}\n                                                    </Menu.Item> */}\n                                                </div>\n                                            </Menu.Items>\n                                        </Transition>\n                                    </>\n                                )}\n                            </Menu>\n                        </div>\n\n\n                        {/* <nav>\n                            <ul>\n                                <li><Link to=\"/\" className=\"block border border-solid px-4 py-2 rounded-md shadow-sm bg-grey-300  font-bold hover:bg-green-600 hover:text-white\">Search</Link></li>\n                                <li><Link to=\"/simulator\" className=\"block border border-solid px-4 py-2 rounded-md shadow-sm bg-grey-300  font-bold hover:bg-green-600 hover:text-white\">Simulator</Link></li>\n                            </ul>\n                        </nav> */}\n\n                    </Box>\n                </header>\n            </Container>\n        </>\n    )\n};\nexport default Header;","import React from 'react';\nimport Header from '../../molecules/Header';\nimport PropTypes from 'prop-types';\n\nconst SearchLayout = ({ children }) => {\n    return (\n        <>\n            <Header />\n            {children}\n        </>\n    );\n};\n\nSearchLayout.propTypes = {\n    children: PropTypes.any.isRequired\n};\nexport default SearchLayout;","import React from 'react';\nimport PropTypes from 'prop-types';\nconst IconLoading = ({strokeColor, pathFillColor, classNames}) =>{\n    return (\n        <svg className={classNames} \n        xmlns=\"http://www.w3.org/2000/svg\" \n        fill=\"none\" \n        viewBox=\"0 0 24 24\">\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" \n          stroke={strokeColor} strokeWidth=\"4\">\n          </circle>\n          <path className=\"opacity-75\" \n          fill= {pathFillColor}\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n    )\n}\n\nIconLoading.propTypes = {\n  pathFillColor:PropTypes.string,\n  classNames:PropTypes.string\n};\n\nIconLoading.defaultProps = {\n  pathFillColor: '#000',\n  strokeColor:'#000',\n  classNames: 'animate-spin h-5 w-5',\n\n};\n\nexport default IconLoading","import React from 'react';\nimport PropTypes from 'prop-types';\nconst IconClose = ({ color, classNames }) => {\n    return (\n        <svg className={classNames} fill=\"none\" viewBox=\"0 0 24 24\" stroke={color}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n    )\n};\n\n\nIconClose.propTypes = {\n    color: PropTypes.node.isRequired,\n    classNames: PropTypes.string\n};\n\nIconClose.defaultProps = {\n    color: '#000',\n    classNames: 'h-5 w-5',\n\n};\n\n\nexport default IconClose;","import React from 'react';\nimport PropTypes from 'prop-types';\nconst IconSearch = ({color, classNames}) =>{\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" className={classNames} fill=\"none\" viewBox=\"0 0 24 24\" stroke={color}>\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n</svg>\n    )\n}\n\nIconSearch.propTypes = {\n  color: PropTypes.node.isRequired,\n  classNames:PropTypes.string\n};\n\nIconSearch.defaultProps = {\n  color:'#d8d8d8',\n  classNames: 'h-5 w-5',\n\n};\n\n\nexport default IconSearch","import styled from 'styled-components'\n\nexport const FormElement = styled.form`\nposition:relative;\n\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormElement } from './Form.styles';\n\nconst Form = ({ children, className, onSubmit }) => {\n  return (\n    <FormElement\n      onSubmit={onSubmit}\n      className={className}>\n      {children}\n    </FormElement>\n  );\n};\n\nForm.propTypes = {\n  children: PropTypes.any.isRequired,\n  className: PropTypes.string,\n  onSubmit: PropTypes.func\n}\nexport default Form;\n\n","import styled from \"styled-components\";\n\n\nexport const TextElement = styled.p ``","import React from 'react';\nimport {TextElement} from './TextElement.styles'\nconst Text = ({children, className, value}) =>{\n    return (\n        <TextElement  className={className}>\n            {\n                children\n            }\n            </TextElement>\n    )\n}\n\nexport default Text","import styled from 'styled-components';\n\nexport const InputElement = styled.input`\nposition:relative;\n`","import React from 'react';\nimport { InputElement } from './InputElement';\n\nconst Input = ({className, name, type, placeholder, list, onChange, onKeyUp, value, required}) => {\n  return (\n    <InputElement \n    name={name}\n    onChange={onChange} \n    list={list} \n    placeholder={placeholder} \n    className={className} \n    onKeyUp={onKeyUp}\n    value={value}\n    type={type}\n    required = {required}\n    />\n  );\n};\nexport default Input;\n","import styled from \"styled-components\"\nexport const ListElement = styled.ul ``\n","import React from 'react';\nimport { ListElement } from './ListElement.styles';\n\nconst List = ({children, className}) =>{\n    return (\n        <ListElement className={className}>\n        {children}\n    </ListElement>\n    )\n}\n\nexport default List;","import styled from \"styled-components\";\nexport const ListItemElement = styled.li ``;","import React from 'react';\nimport { ListItemElement } from './ListItemElement.styles';\n\nconst List = ({children, className, onClick}) =>{\n    return (\n        <ListItemElement className={className} onClick={onClick}>\n            {\n                children\n            }\n        </ListItemElement>\n    )\n}\n\nexport default List;","import React from 'react';\nimport PropTypes from 'prop-types';\nconst IconSad = ({ color, classNames }) => (\n    <svg className={classNames} fill=\"none\" viewBox=\"0 0 24 24\" stroke={color}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n    </svg>\n)\n\nexport default IconSad;\n\nIconSad.propTypes = {\n    color: PropTypes.node.isRequired,\n    classNames: PropTypes.string\n};\n\nIconSad.defaultProps = {\n    color: '#fff',\n    classNames: 'h-5 w-5',\n\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '../../atoms/Box';\nimport Text from '../../atoms/Text';\n\nconst Messages = ({ children, type }) => {\n\n    let classNames = 'text-blue-300 font-semibold text-xs';\n    let icon = '';\n\n    switch (type) {\n        case 'info':\n            classNames = 'my-4 p-4 mx-auto w-3/6 rounded-lg border shadow-sm bg-blue-100 border-blue-300 text-blue-500 font-semibold text-xs';\n            break;\n\n        case 'warning':\n            classNames = 'my-4 p-4 mx-auto w-3/6 rounded-lg border shadow-sm bg-yellow-100 border-yellow-300 text-yellow-500 font-semibold text-xs';\n            break;\n\n        case 'error':\n            classNames = 'my-4 p-4 mx-auto w-3/6 rounded-lg bg-red-100 border border-red-300 shadow-sm  text-red-500 font-semibold text-xs';\n            break;\n        case 'success':\n            classNames = 'my-4 p-4 mx-auto w-3/6 rounded-lg border shadow-sm bg-green-100 border-green-300 text-green-500 font-semibold text-xs';\n            break;\n\n    };\n\n    return (\n        <>\n            <Box className={classNames}>\n                <Text className=\"text-center font-semibold text-base\">\n                    {children}\n                </Text>\n            </Box>\n        </>\n    )\n}\n\nMessages.propTypes = {\n    children: PropTypes.any.isRequired,\n    type: PropTypes.string.isRequired //info, warning, error, success\n}\nMessages.defaultProps = {\n    type: 'info'\n\n}\n\n\nexport default Messages;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport IconLoading from '../../../../assets/IconLoading';\nimport IconClose from '../../../../assets/IconClose';\nimport IconSearch from '../../../../assets/IconSearch';\nimport Box from '../../../atoms/Box';\nimport Form from \"../../../atoms/Form\";\nimport Text from \"../../../atoms/Text\";\nimport Input from \"../../../atoms/Input\";\nimport List from '../../../atoms/List';\nimport ListItem from \"../../../atoms/ListItem\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchDrugs, setDrug } from \"../../../../redux/actions/searchActions\";\nimport { useTranslation } from 'react-i18next';\nimport { getCovariantById, getCovariant } from '../../../../redux/actions/covariantActions';\nimport { simulatorReset } from '../../../../redux/actions/simulatorActions';\nimport IconSad from '../../../../assets/IconSad';\nimport Messages from '../../Messages/Messages';\nconst SearchBar = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.search.isLoading);\n    const searchDrug = useSelector(state => state.search);\n    const activeDrug = useSelector(state => state.search.selectedDrug);\n    const [selectedDrug, setSelectedDrug] = useState();\n    const [toggleList, setToggleList] = useState(false);\n    const [toggleClose, setToggleClose] = useState(false);\n    const [limit, setLimit] = useState(20);\n    const [drugList, setDrugList] = useState();\n    const { t, i18n } = useTranslation();\n\n    const [searchQuery, setSearchQuery] = useState(null);\n\n\n    //set drug list\n    useEffect(() => {\n        if (searchDrug && searchDrug.drugs && searchDrug.drugs.data && searchDrug.drugs.data.length > 0 ) {\n            setDrugList(searchDrug)\n        }else{\n            setDrugList([])\n        }\n\n        \n    }, [searchDrug]);\n\n\n    //handle key up\n    const handleOnKeyUp = (e) => {\n        let payload = {\n            search: e.target.value,\n            limit: limit\n        }\n\n        setSearchQuery(e.target.value);\n\n        //set selected drug\n        setSelectedDrug(e.target.value);\n        //dispatch search drug actions\n        if (e.target.value.length >= 3) {\n            dispatch(searchDrugs(payload));\n            //toggle drug list\n            setToggleList(true);\n        } else if (e.target.value.length === 0) {\n            //toggle drug list\n            setToggleList(false);\n        }\n    };\n\n    //handle close \n    const handleClose = () => {\n        setToggleList(false);\n        setToggleClose(false);\n        setSelectedDrug(\"\");\n        localStorage.removeItem('selectedDrug');\n        dispatch(setDrug(\"\"));\n        dispatch(simulatorReset());\n        setDrugList([]);\n\n    };\n    //handle click drug\n    const handleClickDrug = (selectedDrug) => {\n        setToggleList(false);\n        setToggleClose(true);\n        dispatch(setDrug(selectedDrug));\n        setSelectedDrug(activeDrug);\n        localStorage.setItem('selectedDrug', JSON.stringify(selectedDrug));\n        if (selectedDrug && selectedDrug.id) {\n            //generate dynamic covariant form\n            dispatch(getCovariantById(selectedDrug.id, i18n.language));\n\n        }\n    };\n\n    useEffect(() => {\n        if (activeDrug && activeDrug.id) {\n            setToggleClose(true);\n            setSelectedDrug(activeDrug);\n        }\n\n    }, [activeDrug])\n\n\n\n    //handle form submit\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n\n    }\n\n    return (\n        <>\n\n            <Form onSubmit={(e) => handleFormSubmit(e)} className=\"py-10 sm:py-2 sm:bg-yellow-300\">\n                <Box className=\"flex flex-col justify-center items-center\">\n                    <Box className=\"2xl:max-w-2xl xl:max-w-xl lg:max-w-xl md:max-w-xl sm:w-11/12 pb-8 relative\">\n                        <Text className=\"text-1xl font-bold 2xl:text-left lg:text-left  pt-4 pb-2 sm:text-center\">\n                            {t(\"search.title\")}\n                        </Text>\n                        <Box className=\"flex\">\n                            <Box className=\"w-full relative\">\n                                <Input\n                                    required\n                                    placeholder={t('search.placeholder')}\n                                    onChange={(e) => handleOnKeyUp(e)}\n                                    value={selectedDrug && selectedDrug.label && selectedDrug.label}\n                                    className=\"placeholder-gray-400 font-semibold py-3 pr-8 pl-10 block w-full rounded-lg  border-gray-300 shadow-sm hover:shadow-md focus:border-green-100 focus:ring focus:ring-green-50 focus:ring-opacity-50 border-gray-300\"\n                                />\n                                <Box className=\"bg-white p-1 absolute cursor-pointer left-2 top-3\">\n                                    <IconSearch />\n\n                                </Box>\n                                {\n                                    (toggleClose) ?\n                                        <Box onClick={handleClose} className=\"bg-white bg-gray-200 hover:bg-green-400 p-1 hover:shadow-sm rounded-lg absolute cursor-pointer right-0 top-2.5 right-2\">\n                                            <IconClose />\n                                        </Box>\n                                        : ''\n                                }\n\n                                {\n                                    (isLoading) ?\n                                        <Box className=\"bg-white p-1 hover:shadow-sm rounded-lg absolute cursor-pointer right-0 top-1.5 right-2\">\n                                            <IconLoading classNames=\"h-7 w-7 animate-spin mr-2\" pathFillColor=\"green\" strokeColor=\"green\" />\n                                        </Box>\n                                        : ''\n                                }\n                            </Box>\n                        </Box>\n                        <Box className=\"flex justify-between\">\n                            <Text className=\"pt-2 text-xs 2xl:text-left lg:text-left  sm:text-center\">\n                                eg - Doliprane\n                                </Text>\n                            {\n                                (selectedDrug && selectedDrug.url && selectedDrug.url) ?\n                                    <Text className=\"pt-2 text-blue-500 hover:text-black font-semibold text-xs 2xl:text-right lg:text-right  sm:text-center\">\n                                        <a target=\"_blank\" href={selectedDrug && selectedDrug.url && selectedDrug.url}>\n                                            Drug info\n                                    </a>\n                                    </Text> : ''\n                            }\n\n                        </Box>\n\n\n                        {\n                            (toggleList) ?\n                                <Box className=\"suggestion-list absolute z-50 w-full\">\n                                    <List className=\"max-h-80 overflow-y-scroll border-gray-300  bg-green-600 rounded-lg shadow-sm\">\n                                        {\n                                            drugList && drugList.drugs && drugList.drugs.data && drugList.drugs.data.map((drug, index) => (\n                                                <ListItem onClick={() => handleClickDrug(drug)} className=\" cursor-pointer py-2 px-3 text-white block hover:bg-yellow-100 hover:text-black\" key={index}>\n                                                    {\n                                                        drug.label\n                                                    }\n                                                </ListItem>\n                                            ))\n                                        }\n                                    </List>\n                                </Box>\n                                :\n                                ''\n                        }\n                    </Box>\n                </Box>\n                <Text className=\"text-center pb-4 px-4 sm:text-sm\">\n                    {t('search.description')}\n                </Text>\n            </Form>\n        \n            {\n                                (searchQuery && searchDrug && searchDrug.drugs && searchDrug.drugs.data && searchDrug.drugs.data.length == 0) ?\n                                    <Messages type=\"error\">\n                                        No drugs found\n                                    </Messages>\n                                    : ''\n                            }\n        </>\n    )\n}\n\nexport default SearchBar;","import React, { useEffect, useRef, useState } from 'react';\nimport Box from '../../atoms/Box';\nimport Container from '../../atoms/Container';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-moment';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\nimport IconLoading from '../../../assets/IconLoading';\nconst Chart = (props) => (\n    <Container className=\"mx-auto my-8\">\n        <Box className=\" w-10/12 mx-auto\">\n            <Line data={props.data} options={props.options} />\n        </Box>\n    </Container>\n);\nconst DrawChart = () => {\n    const isSimulating = useSelector(state => state.simulator.isSimulating);\n    const results = useSelector(state => state.simulator.results);\n    const selectedDrug = useSelector(state => state.search.selectedDrug);\n    const molecule = useSelector(state => state.simulator.molecule);\n    const [data, setData] = useState();\n    const [times, setTimes] = useState(\n        results && results.data.data[molecule].times && results.data.data[molecule].times\n    );\n    const DATA_CURVE_COLORS = [\n        {\n            line: 'rgba(0,254,227,1)',\n            bg: 'rgba(0,254,227,.2)'\n        },\n        {\n            line: 'rgba(254,197,0,1)',\n            bg: 'rgba(254,197,0,.2)'\n        }, {\n            line: 'rgba(254,197,0,1)',\n            bg: 'rgba(254,197,0,.2)'\n        },\n        {\n            line: 'rgba(254,197,0,1)',\n            bg: 'rgba(254,197,0,.2)'\n        },\n        {\n            line: 'rgba(254,197,0,1)',\n            bg: 'rgba(254,197,0,.2)'\n        },\n        {\n            line: 'rgba(80,80,80,1)',\n            bg: 'rgba(80,80,80,.2)'\n        }\n    ]\n\n\n\n    useEffect(() => {\n\n        let dataArray = [];\n\n        // create toxicity level\n        let toxicity = new Array(results && results.data.data[molecule] && results.data.data[molecule].results[0].curves[0].values.length);\n        toxicity.fill(results && results.data.data[molecule].results[0].thresholds[0].value);\n\n        //create efficiancy level\n        let efficiancy = new Array(results && results.data.data[molecule] && results.data.data[molecule].results[0].curves[0].values.length);\n        efficiancy.fill(results && results.data.data[molecule].results[0].thresholds[1].value);\n\n\n        dataArray.push(\n            {\n                data: toxicity,\n                fill: false,\n                label: 'Toxicity Level',\n                borderColor: 'red',\n                pointRadius: 0,\n                pointHitRadius: 0,\n                tension: 0.1,\n                borderWidth: 1,\n                hoverBorderWidth: 3,\n                order: 1\n            },\n            {\n                data: efficiancy,\n                fill: false,\n                label: 'Efficiancy Level',\n                borderColor: 'green',\n                pointRadius: 0,\n                pointHitRadius: 0,\n                tension: 0.1,\n                borderWidth: 1,\n                hoverBorderWidth: 3,\n                order: 0\n            }\n        );\n\n        results && results.data.data[molecule].results[0].curves.map((curve, i) => (\n            dataArray.push({\n                data: curve.values,\n                fill: true,\n                label: curve.legend,\n                backgroundColor: DATA_CURVE_COLORS[i] && DATA_CURVE_COLORS[i] ? DATA_CURVE_COLORS[i].bg : 'rgba(0,0,0,0.25)',\n                borderColor: DATA_CURVE_COLORS[i] && DATA_CURVE_COLORS[i] ? DATA_CURVE_COLORS[i].line : \"#333\",\n                pointRadius: 0,\n                pointHitRadius: 0,\n                tension: 0.1,\n                borderWidth: 1,\n                hoverBorderWidth: 3,\n                order: 2 + i\n            })\n        ));\n        setData({\n            labels: results && results.data.data[molecule].times && results.data.data[molecule].times.map(t => new Date(t * 1000)),\n            datasets: dataArray\n        });\n    }, [results, isSimulating, molecule]);\n    //\n    const options = {\n        reponsive: true,\n        scales: {\n            x: {\n                type: 'time',\n                time:{\n                    unit:'hour'\n                },\n                adapter: {},\n                ticks: {\n                    callback: function (val, index, values) {\n\n                        var time = results && results.data.data[molecule].times && results.data.data[molecule].times;\n                        return moment(time[index] && time[index] * 1000).format(\"YYYY-MMM-DD hh:mm:ss: a\")\n                    },\n                },\n                title: {\n                    display: true,\n                    text: \"Date Time\",\n                }\n            },\n            y: {\n                min: 0,\n                ticks: {\n                    stepSize: 0.1\n                },\n                title: {\n                    display: true,\n                    text: \"Concentration (mg/L)\",\n                    color: \"#666\",\n                    font: {\n                        size: 14,\n                        weight: 'normal'\n                    }\n                }\n            }\n        },\n        plugins: {\n            title: {\n                display: true,\n                text: selectedDrug && selectedDrug.label,\n                font: {\n                    size: 14,\n                    weight: 'normal'\n                },\n                padding: { bottom: 24, left: 0, right: 0, top: 0 }\n            },\n            legend: {\n                align: 'right',\n                reverse: true,\n                boxWidth: 24,\n                generateLabels(a, b) {\n                    console.log(a);\n                    console.log(b);\n                }\n                // display: false,\n            }\n        }\n    }\n\n\n    return (\n        <>\n            {\n                (selectedDrug && selectedDrug.id && results) ?\n                    (isSimulating) ?\n                        <IconLoading></IconLoading>\n                        :\n                        <Chart data={data} options={options} />\n                    : ''\n            }\n\n        </>\n    )\n};\n\n\nexport default DrawChart;","import React from 'react';\nimport PropTypes from 'prop-types';\nconst IconInfo = ({ classNames }) => {\n    return (<>\n        <svg className={classNames}\n            xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\" /></svg>\n    </>)\n}\n\nIconInfo.propTypes = {\n    classNames: PropTypes.string\n};\n\nIconInfo.defaultProps = {\n    classNames: 'h-5 w-5 text-black-500 mr-4',\n};\n\nexport default IconInfo;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Container from '../../atoms/Container';\nimport Box from '../../atoms/Box';\nimport Text from '../../atoms/Text';\nimport IconInfo from '../../../assets/IconInfo';\nimport { setMoleculeAction } from \"../../../redux/actions/simulatorActions\";\nconst MoleculeDropdown = () => {\n    const selectedDrug = useSelector(state => state.search.selectedDrug);\n    const results = useSelector(state => state.simulator.results);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(setMoleculeAction(0));\n    });\n\n    const setMolecule = (e) => {\n        dispatch(setMoleculeAction(parseInt(e.target.value)));\n    }\n    return (\n        <>\n            {\n                (results && results.data && results.data.data && selectedDrug) ?\n                    <Container className=\"mx-auto pt-4\">\n                        <Text className=\"my-4 sm:px-4 text-yellow-500 2xl:text-xl lg:text-4xl md:text-2xl sm:text-xl text-center font-semibold\">\n                            Select a molecule to draw the chart\n                           </Text>\n                        {\n                            (selectedDrug && selectedDrug.id && results && results.data.data[0].molecule) ?\n                                <select onChange={(e) => setMolecule(e)} name=\"molecule\"\n                                    className=\"cursor-pointer block bg-green-400 hover:bg-green-500 hover:shadow-lg text-white w-80 mx-auto border border-gray-300 rounded-lg  h-12 px-4 font-bold  appearance-none focus:border-green-100 focus:ring hover:shadow-sm focus:ring-green-50 focus:ring-opacity-50\"\n                                    placeholder=\"Choose Moleucle\">\n                                    {\n                                        results.data.data.map((data, i) => (\n                                            <option key={i} value={i}>{data.molecule.label}</option>\n                                        ))\n                                    }\n                                </select>\n                                :\n                                <Box className=\"max-w-screen-sm mx-auto  bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative shadow-md\" role=\"alert\">\n                                    <Box className=\"flex \">\n                                        <Box className=\"py-1 \">\n                                            <IconInfo classNames=\"fill-current h-5 w-5 text-red-700 mr-4\" />\n                                        </Box>\n                                        <Box>\n                                            <Text className=\"font-bold\">No molecules found !</Text>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                        }</Container>\n                    : ''\n            }\n        </>\n    )\n}\n\nexport default MoleculeDropdown;","import React from 'react';\nimport DrawChart from '../../molecules/DrawChart';\nimport Container from '../../atoms/Container';\nimport MoleculeDropdown from '../../molecules/MoleculeDropdown';\n\nconst Results = () => {\n    return (\n        <>\n            <Container>\n                <MoleculeDropdown />\n                <DrawChart/>\n            </Container>\n        </>\n    )\n}\n\nexport default Results;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ type, children, className, onClick, disabled }) => {\n    return (\n        <button type={type} className={className} onClick={onClick} disabled={disabled}>\n            {children}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    children: PropTypes.any.isRequired,\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool\n};\n\nexport default Button;","import styled from \"styled-components\";\n\n\nexport const LabelElement = styled.label ``","import React from 'react';\nimport {LabelElement} from \"./LabelElement.styles\";\nconst Label = ({children, className, forID}) =>{\n    return (\n        <LabelElement className={className} htmlFor={forID}>\n            {\n                children\n            }\n        </LabelElement>\n    )\n}\n\nexport default Label;","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Text from \"../../atoms/Text\";\nimport Box from \"../../atoms/Box\";\nimport Label from \"../../atoms/Label\";\nimport IconLoading from \"../../../assets/IconLoading\";\nimport { covariantForm } from \"../../../redux/actions/formActions\";\nimport { useTranslation } from \"react-i18next\";\nimport SimpleReactValidator from \"simple-react-validator\";\n\nconst CovariantForm = () => {\n  const { t, i18n } = useTranslation();\n  const [patient, setPatient] = useState({\n    birthday: \"1986-03-26\",\n  });\n  const stateCovariant = useSelector((state) => state.covariant);\n  const [form_groups, setFormGroups] = useState([]);\n  const [form_items, setFormItems] = useState([]);\n  const dispatch = useDispatch();\n  const selectedDrug = useSelector((state) => state.search.selectedDrug);\n  const [focusedItem, setFocusedItem] = useState(0);\n\n  const validator = useRef(new SimpleReactValidator());\n  //handle patient inputs\n  const handleInput = (e) => {\n    if (e.target.type === \"number\") {\n      setPatient((prevState) => ({\n        ...prevState,\n        [e.target.name]: parseFloat(e.target.value),\n      }));\n    } else {\n      setPatient((prevState) => ({\n        ...prevState,\n        [e.target.name]: e.target.value,\n      }));\n    }\n\n    if (e.target.type === \"checkbox\") {\n      setPatient((prevState) => ({\n        ...prevState,\n        [e.target.name]: e.target.value ? false : true,\n      }));\n    }\n  };\n\n  //dispatch intake patient data\n  useEffect(() => {\n    validator.current.showMessages();\n    dispatch(covariantForm(patient));\n  }, [patient]);\n\n  useEffect(() => {\n    if (\n      stateCovariant &&\n      stateCovariant.form &&\n      stateCovariant.form.data &&\n      stateCovariant.form.data.data &&\n      stateCovariant.form.data.data.covariate_groups\n    ) {\n      setFormGroups(stateCovariant.form.data.data.covariate_groups);\n    }\n  }, [stateCovariant]);\n\n  useEffect(() => {\n    if (\n      stateCovariant &&\n      stateCovariant.form &&\n      stateCovariant.form.data &&\n      stateCovariant.form.data.data &&\n      stateCovariant.form.data.data.covariates\n    ) {\n      setFormItems(stateCovariant.form.data.data.covariates);\n    }\n  }, [stateCovariant]);\n\n  const handleFocus = (index) => {\n    setFocusedItem(index);\n  };\n\n  //container class name\n  const classNames =\n    \"mb-2 block py-3 w-full rounded-lg font-semibold border-gray-300 shadow-sm hover:shadow-md focus:border-green-100 focus:ring focus:ring-green-50 focus:ring-opacity-50\";\n  return (\n    <>\n      {selectedDrug && selectedDrug.id ? (\n        <Box className=\"relative bg-gray-100  border-gray-100 px-6 py-6 rounded\">\n          {stateCovariant.isLoading ? (\n            <IconLoading />\n          ) : (\n            form_groups &&\n            form_groups\n              .sort((a, b) => a.position - b.position)\n              .map((group, index) => (\n                <Box className=\"w-full relative mb-4\" key={index}>\n                  <Text className=\"text-base text-left\">\n                    <strong>{group.description.name}</strong>\n                  </Text>\n\n                  {form_items &&\n                    form_items.map((item, index) =>\n                      //render number inputs\n                      item.covariate_group_id === group.id &&\n                      (item.cov_spec.type === \"float\" ||\n                        item.cov_spec.type === \"int\") ? (\n                        <Box className=\"flex flex-col relative\" key={index}>\n                          <Label className=\"my-2 text-sm font-medium text-gray-400 flex justify-between\">\n                            <span>{item.description.name}</span>\n                            <span className=\"text-yellow-500 font-semibold\">\n                              ({item.cov_spec.unit})\n                            </span>\n                          </Label>\n                          <input\n                            type=\"number\"\n                            required={\n                              item.cov_type === \"mandatory\" ? true : false\n                            }\n                            name={item.cov_key}\n                            step=\"0.1\"\n                            id={item.cov_key}\n                            min={item.cov_spec?.min}\n                            max={item.cov_spec?.max}\n                            placeholder={item.description.placeholder}\n                            onChange={(e) => handleInput(e)}\n                            onMouseLeave={() => handleFocus(-1)}\n                            onMouseEnter={() => handleFocus(index)}\n                            onFocus={() => handleFocus(index)}\n                            className={classNames}\n                            value={(patient && patient[item.cov_key]) || \"\"}\n                          />\n                        </Box>\n                      ) : //render select inputs\n                      item.covariate_group_id === group.id &&\n                        item.cov_spec.type === \"categorical\" ? (\n                        <Box className=\"flex flex-col relative\" key={index}>\n                          <Label className=\"my-2 text-sm font-medium text-gray-400 flex justify-between\">\n                            <span>{item.description.name}</span>\n                            <span className=\"text-yellow-500 font-semibold\">\n                              {item.cov_spec.unit}\n                            </span>\n                          </Label>\n                          <select\n                            onMouseLeave={() => handleFocus(-1)}\n                            onMouseEnter={() => handleFocus(index)}\n                            onChange={(e) => handleInput(e)}\n                            required={\n                              item.cov_type === \"mandatory\" ? true : false\n                            }\n                            name={item.cov_key}\n                            value={\n                              (patient && patient[item.cov_key]) || undefined\n                            }\n                            placeholder={item.description.placeholder}\n                            className={classNames}\n                          >\n                            <option value=\"\">\n                              {item.description.placeholder}\n                            </option>\n                            {item.cov_spec.modality &&\n                              item.cov_spec.modality.map((option, i) => (\n                                <option value={option} key={i}>\n                                  {option}\n                                </option>\n                              ))}\n                          </select>\n                        </Box>\n                      ) : //render boolean inputs\n                      item.covariate_group_id === group.id &&\n                        item.cov_spec.type === \"boolean\" ? (\n                        <Box className=\"relative\" key={index}>\n                          <Box\n                            className=\"bg-gray-100 rounded-lg px-4 hover:bg-green-100 mb-2 pr-2 flex py-1 px-1\"\n                            onMouseLeave={() => handleFocus(-1)}\n                            onMouseEnter={() => handleFocus(index)}\n                          >\n                            <input\n                              type=\"checkbox\"\n                              required={\n                                item.cov_type === \"mandatory\" ? true : false\n                              }\n                              id={item.cov_key}\n                              name={item.cov_key}\n                              value={\n                                    (patient && patient[item.cov_key]) || null\n                              }\n                              className=\"form-checkbox mt-2.5 mr-2\"\n                              placeholder={item.description.placeholder}\n                              onChange={(e) => handleInput(e)}\n                              onMouseLeave={() => handleFocus(-1)}\n                              onMouseEnter={() => handleFocus(index)}\n                            />\n                            <Label\n                              forID={item.cov_key}\n                              className=\"flex justify-between cursor-pointer my-2 text-sm font-medium text-dark\"\n                            >\n                              <span>{item.description.name}</span>\n                              <span className=\"text-yellow-500 font-semibold\">\n                                {item.cov_spec.unit}\n                              </span>\n                            </Label>\n                          </Box>\n                        </Box>\n                      ) : item.covariate_group_id === group.id &&\n                        item.cov_spec.type === \"date\" ? (\n                        <Box className=\"w-full relative\" key={index}>\n                          <Label className=\"my-2 text-sm font-medium text-gray-400 flex justify-between\">\n                            <span>{item.description.name} </span>\n                            <span className=\"text-yellow-500 font-semibold\">\n                              {item.cov_spec.unit}\n                            </span>\n                          </Label>\n                          <input\n                            type=\"date\"\n                            value={\n                              (patient && patient[item.cov_key]) || undefined\n                            }\n                            className={classNames}\n                            placeholder={item.description.placeholder}\n                            name={item.cov_key}\n                            onChange={(e) => handleInput(e)}\n                          />\n                        </Box>\n                      ) : (\n                        \"\"\n                      )\n                    )}\n                </Box>\n              ))\n          )}\n        </Box>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default CovariantForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nconst IconCalendar = ({color, classNames}) => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={classNames} fill=\"none\" viewBox=\"0 0 24 24\" stroke={color}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n        </svg>\n    )\n}\n\nIconCalendar.propTypes = {\n    color: PropTypes.node.isRequired,\n    classesWidthHeight: PropTypes.string\n  };\n  \n  IconCalendar.defaultProps = {\n    classNames: 'h-5 w-5',\n    color:'#000'\n  };\n\nexport default IconCalendar;","import React, { useEffect, useState } from \"react\";\nimport Text from \"../../atoms/Text\";\nimport Box from \"../../atoms/Box\";\nimport Label from \"../../atoms/Label\";\nimport Button from \"../../atoms/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { dosageFormStart } from \"../../../redux/actions/formActions\";\nimport { useTranslation } from \"react-i18next\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport IconCalendar from \"../../../assets/IconCalendar\";\nimport IconClose from \"../../../assets/IconClose\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport en from \"date-fns/locale/en-GB\";\nimport fr from \"date-fns/locale/fr\";\nimport es from \"date-fns/locale/es\";\n\nconst DosageForm = () => {\n  registerLocale(\"es\", es);\n  registerLocale(\"fr\", fr);\n  registerLocale(\"en\", en);\n\n  const { t, i18n } = useTranslation();\n  //get dosage form payload\n  const form = useSelector((state) => state.form);\n  const selectedDrug = useSelector((state) => state.search.selectedDrug);\n\n  //prescription payload\n  const [prescription, setPrescription] = useState({\n    drug_id: selectedDrug && selectedDrug.id,\n    administration_type: \"oral\",\n    start_date: new Date(),\n    end_date: new Date(new Date().setDate(new Date().getDate() + 7)),\n    intakes: \"\",\n  });\n\n  //dosage form state\n  const [intakes, setIntakes] = useState([]);\n\n  //dosage and direction payload\n  const dosage = {\n    quantity: 0,\n    time: 0,\n    interval: 24,\n  };\n\n  useEffect(() => {\n    setIntakes([dosage]);\n  }, []);\n\n  //create dispatcher\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(dosageFormStart(prescription));\n  }, [intakes, prescription]);\n\n  //handle add dosage\n  const addDose = (e) => {\n    e.preventDefault();\n    setIntakes((prevState) => [...prevState, dosage]);\n    setPrescription((prevState)=>({\n        ...prevState,\n        intakes:intakes\n    }));\n  };\n\n  //handle dosage form inputs\n  const handleDosageChange = (e, index) => {\n    let newArr = [...intakes];\n    newArr[index][e.target.name] =\n      e.target.name == \"time\" ? e.target.value : parseFloat(e.target.value);\n    //set intakes\n    setIntakes(newArr);\n    //set intakes for prescription payload\n    setPrescription((prevState) => ({\n      ...prevState,\n      intakes: intakes\n    }));\n  };\n  //remove dosage from dosage form\n  const removeDose = (index) => {\n    var newArr = [...intakes];\n    newArr.splice(index, 1);\n   \n    setPrescription((prevState)=>({\n        ...prevState,\n        intakes:newArr\n    }));\n    setIntakes(newArr);\n\n  };\n\n  //handle start, end date\n  const handleStartDate = (e) => {\n    setPrescription((prevState) => ({\n      ...prevState,\n      start_date: e,\n    }));\n  };\n  //handle start, end date\n  const handleEndDate = (e) => {\n    setPrescription((prevState) => ({\n      ...prevState,\n      end_date: e,\n    }));\n  };\n\n  return (\n    <>\n      <Box className=\"bg-gray-100  border-gray-100 px-6 py-6 rounded\">\n        <Text className=\"text-base text-left font-bold pb-2\">\n          {t(\"search.covariant_form\")}\n        </Text>\n        <Box className=\"grid grid-cols-2 gap-4\">\n          <Box className=\"w-full\">\n            <Label className=\"my-2 text-sm font-medium text-gray-400\">\n              Start Date\n            </Label>\n            <Box className=\"relative\">\n              <DatePicker\n                required\n                showWeekNumbers\n                locale={i18n.language}\n                selected={prescription.start_date}\n                className=\"block py-3 w-full rounded-lg  border-gray-300 shadow-sm hover:shadow-md focus:border-green-100 focus:ring focus:ring-green-50 focus:ring-opacity-50\"\n                placeholder=\"Start date\"\n                onChange={(e) => handleStartDate(e)}\n              />\n\n              <Box className=\"absolute top-3.5 right-4\">\n                <IconCalendar color=\"#d8d8d8\" />\n              </Box>\n            </Box>\n          </Box>\n          <Box className=\"w-full\">\n            <Label className=\"my-2 text-sm font-medium text-gray-400\">\n              End Date\n            </Label>\n            <Box className=\"relative\">\n              <DatePicker\n                required\n                showWeekNumbers\n                locale={i18n.language}\n                selected={prescription.end_date}\n                className=\"block py-3 w-full rounded-lg  border-gray-300 shadow-sm hover:shadow-md focus:border-green-100 focus:ring focus:ring-green-50 focus:ring-opacity-50\"\n                placeholder=\"Start date\"\n                onChange={(e) => handleEndDate(e)}\n              />\n\n              <Box className=\"absolute top-3.5 right-4\">\n                <IconCalendar color=\"#d8d8d8\" />\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <table className=\"w-full mt-6\">\n          <thead>\n            <tr>\n              <th className=\"text-left\">\n                <Label className=\"my-2 text-sm font-medium text-gray-400\">\n                  Quantity\n                </Label>\n              </th>\n              <th className=\"text-left\">\n                <Label className=\"my-2 text-sm font-medium text-gray-400\">\n                  Time\n                </Label>\n              </th>\n              <th className=\"text-left\">\n                <Label className=\"my-2 text-sm font-medium text-gray-400\">\n                  Interval\n                </Label>\n              </th>\n              {intakes && intakes.length > 1 ? (\n                <th className=\"text-left\"></th>\n              ) : (\n                \"\"\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {intakes.map((v, index) => (\n              <tr key={index}>\n                <td className=\"px-2 py-2\">\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    required\n                    className=\"block py-3 w-full rounded-lg  border-gray-300 shadow-sm hover:shadow-md focus:border-green-100 focus:ring focus:ring-green-50 focus:ring-opacity-50\"\n                    placeholder=\"Quantity\"\n                    onChange={(e) => handleDosageChange(e, index)}\n                    name=\"quantity\"\n                  ></input>\n                </td>\n                <td className=\"px-2 py-2\">\n                  <input\n                    type=\"time\"\n                    required\n                    className=\"block py-3 w-full rounded-lg  border-gray-300 shadow-sm hover:shadow-md focus:border-green-100 focus:ring focus:ring-green-50 focus:ring-opacity-50\"\n                    placeholder=\"Time\"\n                    name=\"time\"\n                    onChange={(e) => handleDosageChange(e, index)}\n                  ></input>\n                </td>\n                <td className=\"px-2 py-2\">\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.1\"\n                    required\n                    value={\n                      intakes[index].interval\n                    }\n                    className=\" block py-3 w-full rounded-lg  border-gray-300 shadow-sm hover:shadow-md focus:border-green-100 focus:ring focus:ring-green-50 focus:ring-opacity-50\"\n                    placeholder=\"Interval\"\n                    name=\"interval\"\n                    onChange={(e) => handleDosageChange(e, index)}\n                  ></input>\n                </td>\n                {intakes && intakes.length > 1 ? (\n                  <td>\n                    <Button\n                      type=\"button\"\n                      onClick={() => removeDose(index)}\n                      className=\"items-center rounded-2xl shadow-sm  py-2 px-2 font-bold text-white hover:bg-gray-300 hover:shadow-md active:bg-green-100 active:ring-green-50 active:ring-opacity-50\"\n                    >\n                      <IconClose />\n                    </Button>\n                  </td>\n                ) : (\n                  \"\"\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <Box className=\"flex flex-end\">\n          <Button\n            type=\"button\"\n            onClick={(e) => addDose(e)}\n            className=\"text-base mt-4 items-center rounded-xl border-gray-300 shadow-sm bg-green-400 py-2 px-4 font-bold text-white hover:bg-green-600 hover:shadow-md active:bg-green-100 active:ring-green-50 active:ring-opacity-50\"\n          >\n            + Add\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default DosageForm;\n","import React, { useEffect, useState } from 'react';\nimport Box from '../../atoms/Box';\nimport Button from '../../atoms/Button';\nimport Container from '../../atoms/Container';\nimport Form from '../../atoms/Form';\nimport Text from '../../atoms/Text';\nimport CovariateForm from '../../molecules/CovariateForm';\nimport DosageForm from '../../molecules/DosageForm';\nimport IconLoading from '../../../assets/IconLoading';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport Messages from '../../molecules/Messages/Messages';\nimport { simulatorStart, simulatorFail } from '../../../redux/actions/simulatorActions';\nimport IconSad from '../../../assets/IconSad';\n\nconst Error = ({ simulationError }) => {\n    return (\n        (simulationError && simulationError.error && simulationError.error.message && simulationError.error.message || simulationError.error && simulationError.error.error) ?\n            <>\n                <Messages type=\"error\">\n                    {\n                        simulationError.error.message\n                    }\n                    {\n                        (simulationError.error.error) ? 'Simulation not applicable' : ''\n                    }\n                </Messages>\n\n            </>\n            : ''\n    )\n}\nconst Warning = () => (\n    <Messages type='warning'>\n        Not simulable <br />No covariates for this drug\n    </Messages>\n)\n\nconst SimulatorForm = () => {\n    const dispatch = useDispatch();\n    const { t, i18n } = useTranslation();\n    const form = useSelector(state => state.form);\n    const isSimulating = useSelector(state => state.simulator.isSimulating);\n    const stateCovariant = useSelector(state => state.covariant);\n    const selectedDrug = useSelector(state => state.search.selectedDrug);\n    const isLoading = useSelector(state => state.covariant.isLoading);\n    const simulationError = useSelector(state => state.simulator);\n    const searchDrug = useSelector(state => state.search);\n    const [simulatorPayload, setSimulatorPayload] = useState(\n        {\n            \"params\": {\n                locale: i18n.language\n            },\n            \"subject\": {},\n            \"prescription\": {}\n        }\n    );\n\n    const clearSimulatorError = () => {\n        dispatch(simulatorFail(null));\n    }\n\n    useEffect(() => {\n        setSimulatorPayload(prevState => ({\n            ...prevState,\n            subject: form && form.covarient_form && form.covarient_form,\n            prescription: form && form.dosage_form && form.dosage_form,\n\n        }))\n\n    }, [form])\n\n    const handleSimulator = (e) => {\n        e.preventDefault();\n        dispatch(simulatorStart(simulatorPayload));\n    };\n    return (\n        <>\n            {\n                (selectedDrug &&\n                    selectedDrug.id &&\n                    stateCovariant &&\n                    stateCovariant.form &&\n                    stateCovariant.form.data &&\n                    stateCovariant.form.data.data &&\n                    stateCovariant.form.data.data.covariate_groups &&\n                    stateCovariant.form.data.data.covariates) ?\n                    (stateCovariant.form.data.data.covariate_groups.length > 0 &&\n                        stateCovariant.form.data.data.covariates.length > 0) ?\n                        (!selectedDrug && selectedDrug.is_simulable) ?\n                            <Warning /> :\n\n                            <Form onSubmit={handleSimulator}>\n                                <Error simulationError={simulationError} />\n                                {\n                                    (selectedDrug && selectedDrug.molecules && selectedDrug.molecules[0]) ?\n                                        <Text className=\"my-4 sm:px-4 text-yellow-500 2xl:text-4xl lg:text-4xl md:text-2xl sm:text-md text-center font-semibold\">\n                                            Personalized {\n                                                selectedDrug.molecules[0].label\n                                            } Simulator\n                     </Text>\n                                        :\n                                        <Text className=\"my-4 sm:px-4 text-yellow-500 2xl:text-4xl lg:text-4xl md:text-2xl sm:text-xl text-center font-semibold\">\n                                            Personalized Paracetamol Simulator\n                     </Text>\n                                }\n                                <Container className=\"lg:w-7/12 md:w-7/12 sm:w-full px-4 sm:px-2 mx-auto\">\n                                    <Box className=\"grid grid-cols-4 gap-4\">\n                                        <Box className=\"lg:col-span-2 sm:col-span-4\">\n                                            <CovariateForm />\n                                        </Box>\n                                        <Box className=\"lg:col-span-2 sm:col-span-4\">\n                                            <DosageForm />\n                                        </Box>\n                                    </Box>\n                                    <Button type=\"submit\"\n                                        className=\"mx-auto  mt-4 flex text-xl items-center rounded-lg border-gray-300 shadow-sm bg-green-400 px-8 py-5 font-bold text-white hover:bg-green-600 hover:shadow-md active:bg-green-100 active:ring-green-50 active:ring-opacity-50\">\n                                        {\n                                            (isSimulating) ? <IconLoading /> : ''\n                                        }\n                                        {t(\"search.simulator\")}\n                                    </Button>\n                                </Container>\n                            </Form>\n\n                        : <Messages type=\"error\">\n                            Coudn't find covariant form for the selected drug.\n                        </Messages>\n                    :\n                    (isLoading) ?\n                        <Box className=\"flex item-center block w-full justify-center my-8\">\n                            <IconLoading classNames=\"animate-spin h-8 w-8 text-center max-auto\"\n                                pathFillColor=\"rgb(252, 211, 77)\"\n                                strokeColor=\"rgb(252, 211, 77)\" />\n                        </Box>\n                        :\n                        <>\n                            <Messages type=\"info\">\n                                Please search and select a drug to load the\n                                covariates and dosage forms.\n                    </Messages>\n\n\n\n                        </>\n\n\n            }\n        </>\n    )\n}\n\nexport default SimulatorForm;","import React from 'react';\nimport Container from '../../atoms/Container';\nimport SearchBar from '../../molecules/Search/SearchBar/SearchBar';\nimport Results from '../../organisms/Results';\nimport SimulatorForm from '../../organisms/SimulatorForm';\n\n\nconst Simulator = () =>{\n    return(\n        <>\n            <Container className=\"mx-auto\">\n                <SearchBar/>\n                <SimulatorForm/>\n                <Results/>\n           </Container>\n        </>\n    )\n}\n\nexport default Simulator;","import React, { Suspense, useEffect } from \"react\";\nimport {withTranslation } from 'react-i18next';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store';\nimport SearchLayout from \"./components/layouts/search/SearchLayout\";\nimport Simulator from './components/pages/Simulator/Simulator';\n\n\nconst store = configureStore();\n\nconst withSearchLayout = (SubComponent) => (props) => (\n\t<SearchLayout>\n\t\t<Suspense fallback={\n\t\t\t\t<div>Loading...</div>\n\t\t} >\n\t\t\t<SubComponent {...props} />\n\t\t</Suspense>\n\t</SearchLayout>\n);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={withSearchLayout(Simulator)}/>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default withTranslation() (App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport {initReactI18next} from 'react-i18next';\nimport XHR from 'i18next-xhr-backend';\nimport languageEN from './en-US.json';\nimport languageFR from './fr.json';\nimport languageES from './es.json';\nimport languageBR from './br.json';\ni18n\n.use(XHR)\n.use(LanguageDetector)\n.use(initReactI18next)\n.init({\n    resources: {\n        en: languageEN,\n        fr: languageFR,\n        es: languageES,\n        br: languageBR\n    },\n    /* default language when load the website in browser */\n    lng: \"fr\",\n    /* When react i18next not finding any language to as default in borwser */\n    fallbackLng: \"fr\",\n\n    debug: true,\n    ns: [\"translations\"],\n    defaultNS: \"translations\",\n    keySeparator: \".\",\n    interpolation: {\n        escapeValue: false,\n        formatSeparator: \",\"\n    },\n    react: {\n        wait: true,\n        bindI18n: 'languageChanged loaded',\n        bindStore: 'added removed',\n        nsMode: 'default'\n    }\n})\n\nexport default i18n;\n\n\n//change the language by \n//this.props.i18n.changeLanguage(newLang)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport \"./styles/app.scss\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n';\nReactDOM.render(\n  <I18nextProvider  i18n={i18n}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>  \n  </I18nextProvider>,\n  document.getElementById('exactcure_search')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}